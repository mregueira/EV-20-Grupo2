////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : CPU_main.vf
// /___/   /\     Timestamp : 06/07/2020 17:23:31
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath C:/Users/Marcelo/Documents/GitHub/EV-20-Grupo2/UnionFinale/ipcore_dir -intstyle ise -family artix7 -verilog C:/Users/Marcelo/Documents/GitHub/EV-20-Grupo2/UnionFinale/CPU_main.vf -w C:/Users/Marcelo/Documents/GitHub/EV-20-Grupo2/UnionFinale/CPU_main.sch
//Design Name: CPU_main
//Device: artix7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module INV16_HXILINX_CPU_main (O, I);
    

   output [15:0] O;

   input  [15:0] I;

assign O = ~I;
endmodule
`timescale  100 ps / 10 ps

module ADD16_HXILINX_CPU_main (CO, OFL, S, A, B, CI);

   
   output 	       CO;
   output 	       OFL;
   output [15:0]       S;

   input  [15:0]       A;
   input  [15:0]       B;
   input               CI;


   assign   {CO, S} = A + B + CI;
   assign   OFL     = (A[15]&B[15]&(~S[15])) | ((~A[15])&(~B[15])&S[15]); 

endmodule
`timescale  100 ps / 10 ps

module D4_16E_HXILINX_CPU_main (D0, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, A0, A1, A2, A3, E);
    

   output D0;
   output D1;
   output D2;
   output D3;
   output D4;
   output D5;
   output D6;
   output D7;
   output D8;
   output D9;
   output D10;
   output D11;
   output D12;
   output D13;
   output D14;
   output D15;

   input  A0;
   input  A1;
   input  A2;
   input  A3;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;
   reg D4;
   reg D5;
   reg D6;
   reg D7;
   reg D8;
   reg D9;
   reg D10;
   reg D11;
   reg D12;
   reg D13;
   reg D14;
   reg D15;

      always @ (A0 or A1 or A2 or A3 or E)
      begin
         if(!E)
           {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0000;
        else
        begin
           case({A3,A2,A1,A0})
             4'b0000 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0001;
             4'b0001 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0010;
             4'b0010 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0100;
             4'b0011 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_1000;
             4'b0100 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0001_0000;
             4'b0101 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0010_0000;
             4'b0110 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0100_0000;
             4'b0111 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_1000_0000;
             4'b1000 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0001_0000_0000;
             4'b1001 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0010_0000_0000;
             4'b1010 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0100_0000_0000;
             4'b1011 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_1000_0000_0000;
             4'b1100 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0001_0000_0000_0000;
             4'b1101 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0010_0000_0000_0000;
             4'b1110 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0100_0000_0000_0000;
             4'b1111 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b1000_0000_0000_0000;
          endcase
        end
     end 

endmodule
`timescale  100 ps / 10 ps

module OR6_HXILINX_CPU_main (O, I0, I1, I2, I3, I4, I5);
    

   output O;

   input I0;
   input I1;
   input I2;
   input I3;
   input I4;
   input I5;

assign O = (I0 || I1 || I2 || I3 || I4 || I5);

endmodule
`timescale  100 ps / 10 ps

module AND6_HXILINX_CPU_main (O, I0, I1, I2, I3, I4, I5);
    

   output O;

   input I0;
   input I1;
   input I2;
   input I3;
   input I4;
   input I5;

assign O = I0 && I1 && I2 && I3 && I4 && I5;

endmodule
`timescale 100 ps / 10 ps

module IFD_HXILINX_CPU_main(Q, C, D);
   
   output             Q;

   input 	      C;	
   input              D;
   
   parameter INIT = 1'b0;
   (* IOB = "TRUE" *) 

   reg                Q = INIT;

   always @(posedge C)
     begin
          Q <= D;
     end
   
   
endmodule
`timescale 100 ps / 10 ps

module IFD16_HXILINX_CPU_main(Q, C, D);

   
   output [15:0]      Q;

   input 	      C;	
   input  [15:0]      D;
   
   reg    [15:0]      Q;
  
    (* IOB = "TRUE" *)

   always @(posedge C)
     begin
          Q <= D;
     end
   
   
endmodule
`timescale 1ns / 1ps

module RAM_main_MUSER_CPU_main(CLK, 
                               GND, 
                               MemADDR, 
                               Rd, 
                               Wr, 
                               ToFromW);

    input CLK;
    input [15:0] GND;
    input [9:0] MemADDR;
    input Rd;
    input Wr;
    inout [15:0] ToFromW;
   
   wire [15:0] XLXN_23;
   
   RAM_internal  XLXI_1 (.addr(MemADDR[9:0]), 
                        .clk(CLK), 
                        .data_in(ToFromW[15:0]), 
                        .rd_enb(Rd), 
                        .wr_enb(Wr), 
                        .data_out(XLXN_23[15:0]));
   BiMux2Bus16  XLXI_2 (.HiZ(Wr), 
                       .IN_0(XLXN_23[15:0]), 
                       .IN_1(GND[15:0]), 
                       .S(Wr), 
                       .Y(ToFromW[15:0]));
endmodule
`timescale 1ns / 1ps

module reg_to_bus_2bit_sel_MUSER_CPU_main(R0, 
                                          R1, 
                                          R2, 
                                          R3, 
                                          SEL, 
                                          TO_BUS_Z);

    input [15:0] R0;
    input [15:0] R1;
    input [15:0] R2;
    input [15:0] R3;
    input [1:0] SEL;
   output [15:0] TO_BUS_Z;
   
   wire [15:0] XLXN_5;
   wire [15:0] XLXN_6;
   
   reg_to_bus_1bit_sel  XLXI_1 (.R0(R0[15:0]), 
                               .R1(R1[15:0]), 
                               .SEL_BUS(SEL[0]), 
                               .TO_BUS(XLXN_5[15:0]));
   reg_to_bus_1bit_sel  XLXI_2 (.R0(R2[15:0]), 
                               .R1(R3[15:0]), 
                               .SEL_BUS(SEL[0]), 
                               .TO_BUS(XLXN_6[15:0]));
   reg_to_bus_1bit_sel  XLXI_3 (.R0(XLXN_5[15:0]), 
                               .R1(XLXN_6[15:0]), 
                               .SEL_BUS(SEL[1]), 
                               .TO_BUS(TO_BUS_Z[15:0]));
endmodule
`timescale 1ns / 1ps

module reg_to_bus_3bit_sel_MUSER_CPU_main(R0, 
                                          R1, 
                                          R2, 
                                          R3, 
                                          R4, 
                                          R5, 
                                          R6, 
                                          R7, 
                                          SEL_B, 
                                          TO_BUS_3B);

    input [15:0] R0;
    input [15:0] R1;
    input [15:0] R2;
    input [15:0] R3;
    input [15:0] R4;
    input [15:0] R5;
    input [15:0] R6;
    input [15:0] R7;
    input [2:0] SEL_B;
   output [15:0] TO_BUS_3B;
   
   wire [15:0] XLXN_1;
   wire [15:0] XLXN_2;
   
   reg_to_bus_1bit_sel  XLXI_4 (.R0(XLXN_1[15:0]), 
                               .R1(XLXN_2[15:0]), 
                               .SEL_BUS(SEL_B[2]), 
                               .TO_BUS(TO_BUS_3B[15:0]));
   reg_to_bus_2bit_sel_MUSER_CPU_main  XLXI_7 (.R0(R0[15:0]), 
                                              .R1(R1[15:0]), 
                                              .R2(R2[15:0]), 
                                              .R3(R3[15:0]), 
                                              .SEL(SEL_B[1:0]), 
                                              .TO_BUS_Z(XLXN_1[15:0]));
   reg_to_bus_2bit_sel_MUSER_CPU_main  XLXI_8 (.R0(R4[15:0]), 
                                              .R1(R5[15:0]), 
                                              .R2(R6[15:0]), 
                                              .R3(R7[15:0]), 
                                              .SEL(SEL_B[1:0]), 
                                              .TO_BUS_Z(XLXN_2[15:0]));
endmodule
`timescale 1ns / 1ps

module demux2b_w_en_MUSER_CPU_main(ENABLE, 
                                   SEL, 
                                   x, 
                                   a0, 
                                   a1, 
                                   a2, 
                                   a3);

    input ENABLE;
    input [1:0] SEL;
    input x;
   output a0;
   output a1;
   output a2;
   output a3;
   
   wire XLXN_12;
   wire XLXN_13;
   
   demux1b_w_en  XLXI_4 (.enable(ENABLE), 
                        .sel(SEL[0]), 
                        .x(XLXN_12), 
                        .a0(a0), 
                        .a1(a1));
   demux1b_w_en  XLXI_5 (.enable(ENABLE), 
                        .sel(SEL[0]), 
                        .x(XLXN_13), 
                        .a0(a2), 
                        .a1(a3));
   demux1b  XLXI_6 (.sel(SEL[1]), 
                   .x(x), 
                   .a0(XLXN_12), 
                   .a1(XLXN_13));
endmodule
`timescale 1ns / 1ps

module demux3b_w_en_MUSER_CPU_main(ENABLE, 
                                   SEL, 
                                   x, 
                                   a0, 
                                   a1, 
                                   a2, 
                                   a3, 
                                   a4, 
                                   a5, 
                                   a6, 
                                   a7);

    input ENABLE;
    input [2:0] SEL;
    input x;
   output a0;
   output a1;
   output a2;
   output a3;
   output a4;
   output a5;
   output a6;
   output a7;
   
   wire XLXN_10;
   wire XLXN_11;
   
   demux2b_w_en_MUSER_CPU_main  XLXI_1 (.ENABLE(ENABLE), 
                                       .SEL(SEL[1:0]), 
                                       .x(XLXN_10), 
                                       .a0(a0), 
                                       .a1(a1), 
                                       .a2(a2), 
                                       .a3(a3));
   demux2b_w_en_MUSER_CPU_main  XLXI_2 (.ENABLE(ENABLE), 
                                       .SEL(SEL[1:0]), 
                                       .x(XLXN_11), 
                                       .a0(a4), 
                                       .a1(a5), 
                                       .a2(a6), 
                                       .a3(a7));
   demux1b  XLXI_3 (.sel(SEL[2]), 
                   .x(x), 
                   .a0(XLXN_10), 
                   .a1(XLXN_11));
endmodule
`timescale 1ns / 1ps

module ffd16_w_en_MUSER_CPU_main(CLK, 
                                 D, 
                                 EN, 
                                 Q);

    input CLK;
    input [15:0] D;
    input EN;
   output [15:0] Q;
   
   wire XLXN_1;
   
   (* HU_SET = "XLXI_1_48" *) 
   IFD16_HXILINX_CPU_main  XLXI_1 (.C(XLXN_1), 
                                  .D(D[15:0]), 
                                  .Q(Q[15:0]));
   AND2  XLXI_2 (.I0(CLK), 
                .I1(EN), 
                .O(XLXN_1));
endmodule
`timescale 1ns / 1ps

module demux_bus16b_sel2b_MUSER_CPU_main(FROM_BUS, 
                                         SEL_BUS, 
                                         R0, 
                                         R1, 
                                         R2, 
                                         R3);

    input [15:0] FROM_BUS;
    input [1:0] SEL_BUS;
   output [15:0] R0;
   output [15:0] R1;
   output [15:0] R2;
   output [15:0] R3;
   
   wire [15:0] XLXN_3;
   wire [15:0] XLXN_4;
   
   demux_bus16b_sel1b  XLXI_1 (.FROM_BUS(XLXN_4[15:0]), 
                              .SEL_BUS(SEL_BUS[0]), 
                              .R0(R0[15:0]), 
                              .R1(R1[15:0]));
   demux_bus16b_sel1b  XLXI_2 (.FROM_BUS(XLXN_3[15:0]), 
                              .SEL_BUS(SEL_BUS[0]), 
                              .R0(R2[15:0]), 
                              .R1(R3[15:0]));
   demux_bus16b_sel1b  XLXI_3 (.FROM_BUS(FROM_BUS[15:0]), 
                              .SEL_BUS(SEL_BUS[1]), 
                              .R0(XLXN_4[15:0]), 
                              .R1(XLXN_3[15:0]));
endmodule
`timescale 1ns / 1ps

module demux_bus16b_sel3b_MUSER_CPU_main(FROM_BUS, 
                                         SEL_BUS, 
                                         R0, 
                                         R1, 
                                         R2, 
                                         R3, 
                                         R4, 
                                         R5, 
                                         R6, 
                                         R7);

    input [15:0] FROM_BUS;
    input [2:0] SEL_BUS;
   output [15:0] R0;
   output [15:0] R1;
   output [15:0] R2;
   output [15:0] R3;
   output [15:0] R4;
   output [15:0] R5;
   output [15:0] R6;
   output [15:0] R7;
   
   wire [15:0] XLXN_1;
   wire [15:0] XLXN_2;
   
   demux_bus16b_sel2b_MUSER_CPU_main  XLXI_1 (.FROM_BUS(XLXN_1[15:0]), 
                                             .SEL_BUS(SEL_BUS[1:0]), 
                                             .R0(R0[15:0]), 
                                             .R1(R1[15:0]), 
                                             .R2(R2[15:0]), 
                                             .R3(R3[15:0]));
   demux_bus16b_sel2b_MUSER_CPU_main  XLXI_2 (.FROM_BUS(XLXN_2[15:0]), 
                                             .SEL_BUS(SEL_BUS[1:0]), 
                                             .R0(R4[15:0]), 
                                             .R1(R5[15:0]), 
                                             .R2(R6[15:0]), 
                                             .R3(R7[15:0]));
   demux_bus16b_sel1b  XLXI_3 (.FROM_BUS(FROM_BUS[15:0]), 
                              .SEL_BUS(SEL_BUS[2]), 
                              .R0(XLXN_1[15:0]), 
                              .R1(XLXN_2[15:0]));
endmodule
`timescale 1ns / 1ps

module jsr_backup_reg_MUSER_CPU_main(CLK, 
                                     IN_R, 
                                     LEVEL, 
                                     OUT_R);

    input CLK;
    input [15:0] IN_R;
    input [2:0] LEVEL;
   output [15:0] OUT_R;
   
   wire [15:0] OUTFF0;
   wire [15:0] OUTFF1;
   wire [15:0] OUTFF2;
   wire [15:0] OUTFF3;
   wire [15:0] OUTFF4;
   wire [15:0] OUTFF5;
   wire [15:0] OUTFF6;
   wire [15:0] OUTFF7;
   wire W0;
   wire W1;
   wire W2;
   wire W3;
   wire W4;
   wire W5;
   wire W6;
   wire W7;
   wire [15:0] XLXN_3;
   wire [15:0] XLXN_4;
   wire [15:0] XLXN_5;
   wire [15:0] XLXN_6;
   wire [15:0] XLXN_7;
   wire [15:0] XLXN_8;
   wire [15:0] XLXN_9;
   wire [15:0] XLXN_10;
   wire XLXN_12;
   
   ffd16_w_en_MUSER_CPU_main  XLXI_1 (.CLK(CLK), 
                                     .D(XLXN_3[15:0]), 
                                     .EN(W0), 
                                     .Q(OUTFF0[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_2 (.CLK(CLK), 
                                     .D(XLXN_4[15:0]), 
                                     .EN(W1), 
                                     .Q(OUTFF1[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_3 (.CLK(CLK), 
                                     .D(XLXN_5[15:0]), 
                                     .EN(W2), 
                                     .Q(OUTFF2[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_4 (.CLK(CLK), 
                                     .D(XLXN_6[15:0]), 
                                     .EN(W3), 
                                     .Q(OUTFF3[15:0]));
   demux_bus16b_sel3b_MUSER_CPU_main  XLXI_5 (.FROM_BUS(IN_R[15:0]), 
                                             .SEL_BUS(LEVEL[2:0]), 
                                             .R0(XLXN_3[15:0]), 
                                             .R1(XLXN_4[15:0]), 
                                             .R2(XLXN_5[15:0]), 
                                             .R3(XLXN_6[15:0]), 
                                             .R4(XLXN_7[15:0]), 
                                             .R5(XLXN_8[15:0]), 
                                             .R6(XLXN_9[15:0]), 
                                             .R7(XLXN_10[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_10 (.CLK(CLK), 
                                      .D(XLXN_7[15:0]), 
                                      .EN(W4), 
                                      .Q(OUTFF4[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_11 (.CLK(CLK), 
                                      .D(XLXN_8[15:0]), 
                                      .EN(W5), 
                                      .Q(OUTFF5[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_12 (.CLK(CLK), 
                                      .D(XLXN_9[15:0]), 
                                      .EN(W6), 
                                      .Q(OUTFF6[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_13 (.CLK(CLK), 
                                      .D(XLXN_10[15:0]), 
                                      .EN(W7), 
                                      .Q(OUTFF7[15:0]));
   demux3b_w_en_MUSER_CPU_main  XLXI_14 (.ENABLE(XLXN_12), 
                                        .SEL(LEVEL[2:0]), 
                                        .x(XLXN_12), 
                                        .a0(W0), 
                                        .a1(W1), 
                                        .a2(W2), 
                                        .a3(W3), 
                                        .a4(W4), 
                                        .a5(W5), 
                                        .a6(W6), 
                                        .a7(W7));
   VCC  XLXI_15 (.P(XLXN_12));
   reg_to_bus_3bit_sel_MUSER_CPU_main  XLXI_16 (.R0(OUTFF0[15:0]), 
                                               .R1(OUTFF1[15:0]), 
                                               .R2(OUTFF2[15:0]), 
                                               .R3(OUTFF3[15:0]), 
                                               .R4(OUTFF4[15:0]), 
                                               .R5(OUTFF5[15:0]), 
                                               .R6(OUTFF6[15:0]), 
                                               .R7(OUTFF7[15:0]), 
                                               .SEL_B(LEVEL[2:0]), 
                                               .TO_BUS_3B(OUT_R[15:0]));
endmodule
`timescale 1ns / 1ps

module demux_bus16b_sel4b_MUSER_CPU_main(FROM_BUS, 
                                         SEL_BUS, 
                                         R0, 
                                         R1, 
                                         R2, 
                                         R3, 
                                         R4, 
                                         R5, 
                                         R6, 
                                         R7, 
                                         R8, 
                                         R9, 
                                         R10, 
                                         R11, 
                                         R12, 
                                         R13, 
                                         R14, 
                                         R15);

    input [15:0] FROM_BUS;
    input [3:0] SEL_BUS;
   output [15:0] R0;
   output [15:0] R1;
   output [15:0] R2;
   output [15:0] R3;
   output [15:0] R4;
   output [15:0] R5;
   output [15:0] R6;
   output [15:0] R7;
   output [15:0] R8;
   output [15:0] R9;
   output [15:0] R10;
   output [15:0] R11;
   output [15:0] R12;
   output [15:0] R13;
   output [15:0] R14;
   output [15:0] R15;
   
   wire [15:0] XLXN_1;
   wire [15:0] XLXN_3;
   
   demux_bus16b_sel3b_MUSER_CPU_main  XLXI_1 (.FROM_BUS(XLXN_1[15:0]), 
                                             .SEL_BUS(SEL_BUS[2:0]), 
                                             .R0(R0[15:0]), 
                                             .R1(R1[15:0]), 
                                             .R2(R2[15:0]), 
                                             .R3(R3[15:0]), 
                                             .R4(R4[15:0]), 
                                             .R5(R5[15:0]), 
                                             .R6(R6[15:0]), 
                                             .R7(R7[15:0]));
   demux_bus16b_sel3b_MUSER_CPU_main  XLXI_2 (.FROM_BUS(XLXN_3[15:0]), 
                                             .SEL_BUS(SEL_BUS[2:0]), 
                                             .R0(R8[15:0]), 
                                             .R1(R9[15:0]), 
                                             .R2(R10[15:0]), 
                                             .R3(R11[15:0]), 
                                             .R4(R12[15:0]), 
                                             .R5(R13[15:0]), 
                                             .R6(R14[15:0]), 
                                             .R7(R15[15:0]));
   demux_bus16b_sel1b  XLXI_3 (.FROM_BUS(FROM_BUS[15:0]), 
                              .SEL_BUS(SEL_BUS[3]), 
                              .R0(XLXN_1[15:0]), 
                              .R1(XLXN_3[15:0]));
endmodule
`timescale 1ns / 1ps

module demux_bus16b_sel5b_MUSER_CPU_main(FROM_BUS, 
                                         SEL_BUS, 
                                         R0, 
                                         R1, 
                                         R2, 
                                         R3, 
                                         R4, 
                                         R5, 
                                         R6, 
                                         R7, 
                                         R8, 
                                         R9, 
                                         R10, 
                                         R11, 
                                         R12, 
                                         R13, 
                                         R14, 
                                         R15, 
                                         R16, 
                                         R17, 
                                         R18, 
                                         R19, 
                                         R20, 
                                         R21, 
                                         R22, 
                                         R23, 
                                         R24, 
                                         R25, 
                                         R26, 
                                         R27, 
                                         R28, 
                                         R29, 
                                         R30, 
                                         R31);

    input [15:0] FROM_BUS;
    input [4:0] SEL_BUS;
   output [15:0] R0;
   output [15:0] R1;
   output [15:0] R2;
   output [15:0] R3;
   output [15:0] R4;
   output [15:0] R5;
   output [15:0] R6;
   output [15:0] R7;
   output [15:0] R8;
   output [15:0] R9;
   output [15:0] R10;
   output [15:0] R11;
   output [15:0] R12;
   output [15:0] R13;
   output [15:0] R14;
   output [15:0] R15;
   output [15:0] R16;
   output [15:0] R17;
   output [15:0] R18;
   output [15:0] R19;
   output [15:0] R20;
   output [15:0] R21;
   output [15:0] R22;
   output [15:0] R23;
   output [15:0] R24;
   output [15:0] R25;
   output [15:0] R26;
   output [15:0] R27;
   output [15:0] R28;
   output [15:0] R29;
   output [15:0] R30;
   output [15:0] R31;
   
   wire [15:0] XLXN_1;
   wire [15:0] XLXN_2;
   
   demux_bus16b_sel4b_MUSER_CPU_main  XLXI_1 (.FROM_BUS(XLXN_1[15:0]), 
                                             .SEL_BUS(SEL_BUS[3:0]), 
                                             .R0(R0[15:0]), 
                                             .R1(R1[15:0]), 
                                             .R2(R2[15:0]), 
                                             .R3(R3[15:0]), 
                                             .R4(R4[15:0]), 
                                             .R5(R5[15:0]), 
                                             .R6(R6[15:0]), 
                                             .R7(R7[15:0]), 
                                             .R8(R8[15:0]), 
                                             .R9(R9[15:0]), 
                                             .R10(R10[15:0]), 
                                             .R11(R11[15:0]), 
                                             .R12(R12[15:0]), 
                                             .R13(R13[15:0]), 
                                             .R14(R14[15:0]), 
                                             .R15(R15[15:0]));
   demux_bus16b_sel4b_MUSER_CPU_main  XLXI_2 (.FROM_BUS(XLXN_2[15:0]), 
                                             .SEL_BUS(SEL_BUS[3:0]), 
                                             .R0(R16[15:0]), 
                                             .R1(R17[15:0]), 
                                             .R2(R18[15:0]), 
                                             .R3(R19[15:0]), 
                                             .R4(R20[15:0]), 
                                             .R5(R21[15:0]), 
                                             .R6(R22[15:0]), 
                                             .R7(R23[15:0]), 
                                             .R8(R24[15:0]), 
                                             .R9(R25[15:0]), 
                                             .R10(R26[15:0]), 
                                             .R11(R27[15:0]), 
                                             .R12(R28[15:0]), 
                                             .R13(R29[15:0]), 
                                             .R14(R30[15:0]), 
                                             .R15(R31[15:0]));
   demux_bus16b_sel1b  XLXI_3 (.FROM_BUS(FROM_BUS[15:0]), 
                              .SEL_BUS(SEL_BUS[4]), 
                              .R0(XLXN_1[15:0]), 
                              .R1(XLXN_2[15:0]));
endmodule
`timescale 1ns / 1ps

module demux_bus16b_sel6b_MUSER_CPU_main(FROM_BUS, 
                                         SEL, 
                                         R0, 
                                         R1, 
                                         R2, 
                                         R3, 
                                         R4, 
                                         R5, 
                                         R6, 
                                         R7, 
                                         R8, 
                                         R9, 
                                         R10, 
                                         R11, 
                                         R12, 
                                         R13, 
                                         R14, 
                                         R15, 
                                         R16, 
                                         R17, 
                                         R18, 
                                         R19, 
                                         R20, 
                                         R21, 
                                         R22, 
                                         R23, 
                                         R24, 
                                         R25, 
                                         R26, 
                                         R27, 
                                         R28, 
                                         R29, 
                                         R30, 
                                         R31, 
                                         R32, 
                                         R33, 
                                         R34, 
                                         R35, 
                                         R36, 
                                         R37, 
                                         R38, 
                                         R39, 
                                         R40, 
                                         R41, 
                                         R42, 
                                         R43, 
                                         R44, 
                                         R45, 
                                         R46, 
                                         R47, 
                                         R48, 
                                         R49, 
                                         R50, 
                                         R51, 
                                         R52, 
                                         R53, 
                                         R54, 
                                         R55, 
                                         R56, 
                                         R57, 
                                         R58, 
                                         R59, 
                                         R60, 
                                         R61, 
                                         R62, 
                                         R63);

    input [15:0] FROM_BUS;
    input [5:0] SEL;
   output [15:0] R0;
   output [15:0] R1;
   output [15:0] R2;
   output [15:0] R3;
   output [15:0] R4;
   output [15:0] R5;
   output [15:0] R6;
   output [15:0] R7;
   output [15:0] R8;
   output [15:0] R9;
   output [15:0] R10;
   output [15:0] R11;
   output [15:0] R12;
   output [15:0] R13;
   output [15:0] R14;
   output [15:0] R15;
   output [15:0] R16;
   output [15:0] R17;
   output [15:0] R18;
   output [15:0] R19;
   output [15:0] R20;
   output [15:0] R21;
   output [15:0] R22;
   output [15:0] R23;
   output [15:0] R24;
   output [15:0] R25;
   output [15:0] R26;
   output [15:0] R27;
   output [15:0] R28;
   output [15:0] R29;
   output [15:0] R30;
   output [15:0] R31;
   output [15:0] R32;
   output [15:0] R33;
   output [15:0] R34;
   output [15:0] R35;
   output [15:0] R36;
   output [15:0] R37;
   output [15:0] R38;
   output [15:0] R39;
   output [15:0] R40;
   output [15:0] R41;
   output [15:0] R42;
   output [15:0] R43;
   output [15:0] R44;
   output [15:0] R45;
   output [15:0] R46;
   output [15:0] R47;
   output [15:0] R48;
   output [15:0] R49;
   output [15:0] R50;
   output [15:0] R51;
   output [15:0] R52;
   output [15:0] R53;
   output [15:0] R54;
   output [15:0] R55;
   output [15:0] R56;
   output [15:0] R57;
   output [15:0] R58;
   output [15:0] R59;
   output [15:0] R60;
   output [15:0] R61;
   output [15:0] R62;
   output [15:0] R63;
   
   wire [15:0] XLXN_1;
   wire [15:0] XLXN_2;
   
   demux_bus16b_sel5b_MUSER_CPU_main  XLXI_1 (.FROM_BUS(XLXN_2[15:0]), 
                                             .SEL_BUS(SEL[4:0]), 
                                             .R0(R0[15:0]), 
                                             .R1(R1[15:0]), 
                                             .R2(R2[15:0]), 
                                             .R3(R3[15:0]), 
                                             .R4(R4[15:0]), 
                                             .R5(R5[15:0]), 
                                             .R6(R6[15:0]), 
                                             .R7(R7[15:0]), 
                                             .R8(R8[15:0]), 
                                             .R9(R9[15:0]), 
                                             .R10(R10[15:0]), 
                                             .R11(R11[15:0]), 
                                             .R12(R12[15:0]), 
                                             .R13(R13[15:0]), 
                                             .R14(R14[15:0]), 
                                             .R15(R15[15:0]), 
                                             .R16(R16[15:0]), 
                                             .R17(R17[15:0]), 
                                             .R18(R18[15:0]), 
                                             .R19(R19[15:0]), 
                                             .R20(R20[15:0]), 
                                             .R21(R21[15:0]), 
                                             .R22(R22[15:0]), 
                                             .R23(R23[15:0]), 
                                             .R24(R24[15:0]), 
                                             .R25(R25[15:0]), 
                                             .R26(R26[15:0]), 
                                             .R27(R27[15:0]), 
                                             .R28(R28[15:0]), 
                                             .R29(R29[15:0]), 
                                             .R30(R30[15:0]), 
                                             .R31(R31[15:0]));
   demux_bus16b_sel5b_MUSER_CPU_main  XLXI_2 (.FROM_BUS(XLXN_1[15:0]), 
                                             .SEL_BUS(SEL[4:0]), 
                                             .R0(R32[15:0]), 
                                             .R1(R33[15:0]), 
                                             .R2(R34[15:0]), 
                                             .R3(R35[15:0]), 
                                             .R4(R36[15:0]), 
                                             .R5(R37[15:0]), 
                                             .R6(R38[15:0]), 
                                             .R7(R39[15:0]), 
                                             .R8(R40[15:0]), 
                                             .R9(R41[15:0]), 
                                             .R10(R42[15:0]), 
                                             .R11(R43[15:0]), 
                                             .R12(R44[15:0]), 
                                             .R13(R45[15:0]), 
                                             .R14(R46[15:0]), 
                                             .R15(R47[15:0]), 
                                             .R16(R48[15:0]), 
                                             .R17(R49[15:0]), 
                                             .R18(R50[15:0]), 
                                             .R19(R51[15:0]), 
                                             .R20(R52[15:0]), 
                                             .R21(R53[15:0]), 
                                             .R22(R54[15:0]), 
                                             .R23(R55[15:0]), 
                                             .R24(R56[15:0]), 
                                             .R25(R57[15:0]), 
                                             .R26(R58[15:0]), 
                                             .R27(R59[15:0]), 
                                             .R28(R60[15:0]), 
                                             .R29(R61[15:0]), 
                                             .R30(R62[15:0]), 
                                             .R31(R63[15:0]));
   demux_bus16b_sel1b  XLXI_3 (.FROM_BUS(FROM_BUS[15:0]), 
                              .SEL_BUS(SEL[5]), 
                              .R0(XLXN_2[15:0]), 
                              .R1(XLXN_1[15:0]));
endmodule
`timescale 1ns / 1ps

module demux4b_w_en_MUSER_CPU_main(ENABLE, 
                                   SEL, 
                                   x, 
                                   a0, 
                                   a1, 
                                   a2, 
                                   a3, 
                                   a4, 
                                   a5, 
                                   a6, 
                                   a7, 
                                   a8, 
                                   a9, 
                                   a10, 
                                   a11, 
                                   a12, 
                                   a13, 
                                   a14, 
                                   a15);

    input ENABLE;
    input [3:0] SEL;
    input x;
   output a0;
   output a1;
   output a2;
   output a3;
   output a4;
   output a5;
   output a6;
   output a7;
   output a8;
   output a9;
   output a10;
   output a11;
   output a12;
   output a13;
   output a14;
   output a15;
   
   wire XLXN_1;
   wire XLXN_2;
   
   demux3b_w_en_MUSER_CPU_main  XLXI_1 (.ENABLE(ENABLE), 
                                       .SEL(SEL[2:0]), 
                                       .x(XLXN_1), 
                                       .a0(a0), 
                                       .a1(a1), 
                                       .a2(a2), 
                                       .a3(a3), 
                                       .a4(a4), 
                                       .a5(a5), 
                                       .a6(a6), 
                                       .a7(a7));
   demux3b_w_en_MUSER_CPU_main  XLXI_2 (.ENABLE(ENABLE), 
                                       .SEL(SEL[2:0]), 
                                       .x(XLXN_2), 
                                       .a0(a8), 
                                       .a1(a9), 
                                       .a2(a10), 
                                       .a3(a11), 
                                       .a4(a12), 
                                       .a5(a13), 
                                       .a6(a14), 
                                       .a7(a15));
   demux1b  XLXI_3 (.sel(SEL[3]), 
                   .x(x), 
                   .a0(XLXN_1), 
                   .a1(XLXN_2));
endmodule
`timescale 1ns / 1ps

module demux5b_w_en_MUSER_CPU_main(ENABLE, 
                                   SEL, 
                                   X, 
                                   a0, 
                                   a1, 
                                   a2, 
                                   a3, 
                                   a4, 
                                   a5, 
                                   a6, 
                                   a7, 
                                   a8, 
                                   a9, 
                                   a10, 
                                   a11, 
                                   a12, 
                                   a13, 
                                   a14, 
                                   a15, 
                                   a16, 
                                   a17, 
                                   a18, 
                                   a19, 
                                   a20, 
                                   a21, 
                                   a22, 
                                   a23, 
                                   a24, 
                                   a25, 
                                   a26, 
                                   a27, 
                                   a28, 
                                   a29, 
                                   a30, 
                                   a31);

    input ENABLE;
    input [4:0] SEL;
    input X;
   output a0;
   output a1;
   output a2;
   output a3;
   output a4;
   output a5;
   output a6;
   output a7;
   output a8;
   output a9;
   output a10;
   output a11;
   output a12;
   output a13;
   output a14;
   output a15;
   output a16;
   output a17;
   output a18;
   output a19;
   output a20;
   output a21;
   output a22;
   output a23;
   output a24;
   output a25;
   output a26;
   output a27;
   output a28;
   output a29;
   output a30;
   output a31;
   
   wire XLXN_1;
   wire XLXN_2;
   
   demux4b_w_en_MUSER_CPU_main  XLXI_1 (.ENABLE(ENABLE), 
                                       .SEL(SEL[3:0]), 
                                       .x(XLXN_1), 
                                       .a0(a0), 
                                       .a1(a1), 
                                       .a2(a2), 
                                       .a3(a3), 
                                       .a4(a4), 
                                       .a5(a5), 
                                       .a6(a6), 
                                       .a7(a7), 
                                       .a8(a8), 
                                       .a9(a9), 
                                       .a10(a10), 
                                       .a11(a11), 
                                       .a12(a12), 
                                       .a13(a13), 
                                       .a14(a14), 
                                       .a15(a15));
   demux4b_w_en_MUSER_CPU_main  XLXI_2 (.ENABLE(ENABLE), 
                                       .SEL(SEL[3:0]), 
                                       .x(XLXN_2), 
                                       .a0(a16), 
                                       .a1(a17), 
                                       .a2(a18), 
                                       .a3(a19), 
                                       .a4(a20), 
                                       .a5(a21), 
                                       .a6(a22), 
                                       .a7(a23), 
                                       .a8(a24), 
                                       .a9(a25), 
                                       .a10(a26), 
                                       .a11(a27), 
                                       .a12(a28), 
                                       .a13(a29), 
                                       .a14(a30), 
                                       .a15(a31));
   demux1b  XLXI_3 (.sel(SEL[4]), 
                   .x(X), 
                   .a0(XLXN_1), 
                   .a1(XLXN_2));
endmodule
`timescale 1ns / 1ps

module demux6b_w_en_MUSER_CPU_main(ENABLE, 
                                   SEL, 
                                   x, 
                                   WR0, 
                                   WR1, 
                                   WR2, 
                                   WR3, 
                                   WR4, 
                                   WR5, 
                                   WR6, 
                                   WR7, 
                                   WR8, 
                                   WR9, 
                                   WR10, 
                                   WR11, 
                                   WR12, 
                                   WR13, 
                                   WR14, 
                                   WR15, 
                                   WR16, 
                                   WR17, 
                                   WR18, 
                                   WR19, 
                                   WR20, 
                                   WR21, 
                                   WR22, 
                                   WR23, 
                                   WR24, 
                                   WR25, 
                                   WR26, 
                                   WR27, 
                                   WR28, 
                                   WR29, 
                                   WR30, 
                                   WR31, 
                                   WR32, 
                                   WR33, 
                                   WR34, 
                                   WR35, 
                                   WR36, 
                                   WR37, 
                                   WR38, 
                                   WR39, 
                                   WR40, 
                                   WR41, 
                                   WR42, 
                                   WR43, 
                                   WR44, 
                                   WR45, 
                                   WR46, 
                                   WR47, 
                                   WR48, 
                                   WR49, 
                                   WR50, 
                                   WR51, 
                                   WR52, 
                                   WR53, 
                                   WR54, 
                                   WR55, 
                                   WR56, 
                                   WR57, 
                                   WR58, 
                                   WR59, 
                                   WR60, 
                                   WR61, 
                                   WR62, 
                                   WR63);

    input ENABLE;
    input [5:0] SEL;
    input x;
   output WR0;
   output WR1;
   output WR2;
   output WR3;
   output WR4;
   output WR5;
   output WR6;
   output WR7;
   output WR8;
   output WR9;
   output WR10;
   output WR11;
   output WR12;
   output WR13;
   output WR14;
   output WR15;
   output WR16;
   output WR17;
   output WR18;
   output WR19;
   output WR20;
   output WR21;
   output WR22;
   output WR23;
   output WR24;
   output WR25;
   output WR26;
   output WR27;
   output WR28;
   output WR29;
   output WR30;
   output WR31;
   output WR32;
   output WR33;
   output WR34;
   output WR35;
   output WR36;
   output WR37;
   output WR38;
   output WR39;
   output WR40;
   output WR41;
   output WR42;
   output WR43;
   output WR44;
   output WR45;
   output WR46;
   output WR47;
   output WR48;
   output WR49;
   output WR50;
   output WR51;
   output WR52;
   output WR53;
   output WR54;
   output WR55;
   output WR56;
   output WR57;
   output WR58;
   output WR59;
   output WR60;
   output WR61;
   output WR62;
   output WR63;
   
   wire XLXN_1;
   wire XLXN_2;
   
   demux5b_w_en_MUSER_CPU_main  XLXI_1 (.ENABLE(ENABLE), 
                                       .SEL(SEL[4:0]), 
                                       .X(XLXN_1), 
                                       .a0(WR0), 
                                       .a1(WR1), 
                                       .a2(WR2), 
                                       .a3(WR3), 
                                       .a4(WR4), 
                                       .a5(WR5), 
                                       .a6(WR6), 
                                       .a7(WR7), 
                                       .a8(WR8), 
                                       .a9(WR9), 
                                       .a10(WR10), 
                                       .a11(WR11), 
                                       .a12(WR12), 
                                       .a13(WR13), 
                                       .a14(WR14), 
                                       .a15(WR15), 
                                       .a16(WR16), 
                                       .a17(WR17), 
                                       .a18(WR18), 
                                       .a19(WR19), 
                                       .a20(WR20), 
                                       .a21(WR21), 
                                       .a22(WR22), 
                                       .a23(WR23), 
                                       .a24(WR24), 
                                       .a25(WR25), 
                                       .a26(WR26), 
                                       .a27(WR27), 
                                       .a28(WR28), 
                                       .a29(WR29), 
                                       .a30(WR30), 
                                       .a31(WR31));
   demux5b_w_en_MUSER_CPU_main  XLXI_2 (.ENABLE(ENABLE), 
                                       .SEL(SEL[4:0]), 
                                       .X(XLXN_2), 
                                       .a0(WR32), 
                                       .a1(WR33), 
                                       .a2(WR34), 
                                       .a3(WR35), 
                                       .a4(WR36), 
                                       .a5(WR37), 
                                       .a6(WR38), 
                                       .a7(WR39), 
                                       .a8(WR40), 
                                       .a9(WR41), 
                                       .a10(WR42), 
                                       .a11(WR43), 
                                       .a12(WR44), 
                                       .a13(WR45), 
                                       .a14(WR46), 
                                       .a15(WR47), 
                                       .a16(WR48), 
                                       .a17(WR49), 
                                       .a18(WR50), 
                                       .a19(WR51), 
                                       .a20(WR52), 
                                       .a21(WR53), 
                                       .a22(WR54), 
                                       .a23(WR55), 
                                       .a24(WR56), 
                                       .a25(WR57), 
                                       .a26(WR58), 
                                       .a27(WR59), 
                                       .a28(WR60), 
                                       .a29(WR61), 
                                       .a30(WR62), 
                                       .a31(WR63));
   demux1b  XLXI_3 (.sel(SEL[5]), 
                   .x(x), 
                   .a0(XLXN_1), 
                   .a1(XLXN_2));
endmodule
`timescale 1ns / 1ps

module bloque2_MUSER_CPU_main(C, 
                              CLK, 
                              FROM_BUS, 
                              FROM_WREG, 
                              MR, 
                              MW, 
                              AUX0, 
                              AUX1, 
                              IN_WORK_REG, 
                              OUTPORT0, 
                              OUTPORT1, 
                              R0, 
                              R1, 
                              R2, 
                              R3, 
                              R4, 
                              R5, 
                              R6, 
                              R7, 
                              R8, 
                              R9, 
                              R10, 
                              R11, 
                              R12, 
                              R13, 
                              R14, 
                              R15, 
                              R16, 
                              R17, 
                              R18, 
                              R19, 
                              R20, 
                              R21, 
                              R22, 
                              R23, 
                              R24, 
                              R25, 
                              R26, 
                              R27, 
                              WAUX0, 
                              WAUX1, 
                              WOUTPORT0, 
                              WOUTPORT1, 
                              WR_WORK_REG, 
                              WR0, 
                              WR1, 
                              WR2, 
                              WR3, 
                              WR4, 
                              WR5, 
                              WR6, 
                              WR7, 
                              WR8, 
                              WR9, 
                              WR10, 
                              WR11, 
                              WR12, 
                              WR13, 
                              WR14, 
                              WR15, 
                              WR16, 
                              WR17, 
                              WR18, 
                              WR19, 
                              WR20, 
                              WR21, 
                              WR22, 
                              WR23, 
                              WR24, 
                              WR25, 
                              WR26, 
                              WR27, 
                              TO_FROM_W);

    input [5:0] C;
    input CLK;
    input [15:0] FROM_BUS;
    input [15:0] FROM_WREG;
    input MR;
    input MW;
   output [15:0] AUX0;
   output [15:0] AUX1;
   output [15:0] IN_WORK_REG;
   output [15:0] OUTPORT0;
   output [15:0] OUTPORT1;
   output [15:0] R0;
   output [15:0] R1;
   output [15:0] R2;
   output [15:0] R3;
   output [15:0] R4;
   output [15:0] R5;
   output [15:0] R6;
   output [15:0] R7;
   output [15:0] R8;
   output [15:0] R9;
   output [15:0] R10;
   output [15:0] R11;
   output [15:0] R12;
   output [15:0] R13;
   output [15:0] R14;
   output [15:0] R15;
   output [15:0] R16;
   output [15:0] R17;
   output [15:0] R18;
   output [15:0] R19;
   output [15:0] R20;
   output [15:0] R21;
   output [15:0] R22;
   output [15:0] R23;
   output [15:0] R24;
   output [15:0] R25;
   output [15:0] R26;
   output [15:0] R27;
   output WAUX0;
   output WAUX1;
   output WOUTPORT0;
   output WOUTPORT1;
   output WR_WORK_REG;
   output WR0;
   output WR1;
   output WR2;
   output WR3;
   output WR4;
   output WR5;
   output WR6;
   output WR7;
   output WR8;
   output WR9;
   output WR10;
   output WR11;
   output WR12;
   output WR13;
   output WR14;
   output WR15;
   output WR16;
   output WR17;
   output WR18;
   output WR19;
   output WR20;
   output WR21;
   output WR22;
   output WR23;
   output WR24;
   output WR25;
   output WR26;
   output WR27;
    inout [15:0] TO_FROM_W;
   
   wire [15:0] to_wreg;
   wire [15:0] WREG_FROM_C;
   wire WR_WREG_C;
   wire XLXN_3;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   
   demux6b_w_en_MUSER_CPU_main  XLXI_8 (.ENABLE(XLXN_8), 
                                       .SEL(C[5:0]), 
                                       .x(XLXN_7), 
                                       .WR0(WR0), 
                                       .WR1(WR1), 
                                       .WR2(WR2), 
                                       .WR3(WR3), 
                                       .WR4(WR4), 
                                       .WR5(WR5), 
                                       .WR6(WR6), 
                                       .WR7(WR7), 
                                       .WR8(WR8), 
                                       .WR9(WR9), 
                                       .WR10(WR10), 
                                       .WR11(WR11), 
                                       .WR12(WR12), 
                                       .WR13(WR13), 
                                       .WR14(WR14), 
                                       .WR15(WR15), 
                                       .WR16(WR16), 
                                       .WR17(WR17), 
                                       .WR18(WR18), 
                                       .WR19(WR19), 
                                       .WR20(WR20), 
                                       .WR21(WR21), 
                                       .WR22(WR22), 
                                       .WR23(WR23), 
                                       .WR24(WR24), 
                                       .WR25(WR25), 
                                       .WR26(WR26), 
                                       .WR27(WR27), 
                                       .WR28(), 
                                       .WR29(), 
                                       .WR30(WOUTPORT0), 
                                       .WR31(WOUTPORT1), 
                                       .WR32(WAUX0), 
                                       .WR33(WAUX1), 
                                       .WR34(WR_WREG_C), 
                                       .WR35(), 
                                       .WR36(), 
                                       .WR37(), 
                                       .WR38(), 
                                       .WR39(), 
                                       .WR40(), 
                                       .WR41(), 
                                       .WR42(), 
                                       .WR43(), 
                                       .WR44(), 
                                       .WR45(), 
                                       .WR46(), 
                                       .WR47(), 
                                       .WR48(), 
                                       .WR49(), 
                                       .WR50(), 
                                       .WR51(), 
                                       .WR52(), 
                                       .WR53(), 
                                       .WR54(), 
                                       .WR55(), 
                                       .WR56(), 
                                       .WR57(), 
                                       .WR58(), 
                                       .WR59(), 
                                       .WR60(), 
                                       .WR61(), 
                                       .WR62(), 
                                       .WR63());
   reg_to_bus_1bit_sel  XLXI_11 (.R0(WREG_FROM_C[15:0]), 
                                .R1(to_wreg[15:0]), 
                                .SEL_BUS(XLXN_6), 
                                .TO_BUS(IN_WORK_REG[15:0]));
   bidir_port  XLXI_15 (.clk(CLK), 
                       .from_wreg(FROM_WREG[15:0]), 
                       .mem_read(MR), 
                       .mem_write(MW), 
                       .to_wreg(to_wreg[15:0]), 
                       .data(TO_FROM_W[15:0]));
   demux_bus16b_sel6b_MUSER_CPU_main  XLXI_19 (.FROM_BUS(FROM_BUS[15:0]), 
                                              .SEL(C[5:0]), 
                                              .R0(R0[15:0]), 
                                              .R1(R1[15:0]), 
                                              .R2(R2[15:0]), 
                                              .R3(R3[15:0]), 
                                              .R4(R4[15:0]), 
                                              .R5(R5[15:0]), 
                                              .R6(R6[15:0]), 
                                              .R7(R7[15:0]), 
                                              .R8(R8[15:0]), 
                                              .R9(R9[15:0]), 
                                              .R10(R10[15:0]), 
                                              .R11(R11[15:0]), 
                                              .R12(R12[15:0]), 
                                              .R13(R13[15:0]), 
                                              .R14(R14[15:0]), 
                                              .R15(R15[15:0]), 
                                              .R16(R16[15:0]), 
                                              .R17(R17[15:0]), 
                                              .R18(R18[15:0]), 
                                              .R19(R19[15:0]), 
                                              .R20(R20[15:0]), 
                                              .R21(R21[15:0]), 
                                              .R22(R22[15:0]), 
                                              .R23(R23[15:0]), 
                                              .R24(R24[15:0]), 
                                              .R25(R25[15:0]), 
                                              .R26(R26[15:0]), 
                                              .R27(R27[15:0]), 
                                              .R28(), 
                                              .R29(), 
                                              .R30(OUTPORT0[15:0]), 
                                              .R31(OUTPORT1[15:0]), 
                                              .R32(AUX0[15:0]), 
                                              .R33(AUX1[15:0]), 
                                              .R34(WREG_FROM_C[15:0]), 
                                              .R35(), 
                                              .R36(), 
                                              .R37(), 
                                              .R38(), 
                                              .R39(), 
                                              .R40(), 
                                              .R41(), 
                                              .R42(), 
                                              .R43(), 
                                              .R44(), 
                                              .R45(), 
                                              .R46(), 
                                              .R47(), 
                                              .R48(), 
                                              .R49(), 
                                              .R50(), 
                                              .R51(), 
                                              .R52(), 
                                              .R53(), 
                                              .R54(), 
                                              .R55(), 
                                              .R56(), 
                                              .R57(), 
                                              .R58(), 
                                              .R59(), 
                                              .R60(), 
                                              .R61(), 
                                              .R62(), 
                                              .R63());
   XOR2  XLXI_20 (.I0(XLXN_6), 
                 .I1(WR_WREG_C), 
                 .O(WR_WORK_REG));
   AND2  XLXI_21 (.I0(XLXN_3), 
                 .I1(MW), 
                 .O(XLXN_6));
   INV  XLXI_22 (.I(MR), 
                .O(XLXN_3));
   VCC  XLXI_23 (.P(XLXN_7));
   VCC  XLXI_24 (.P(XLXN_8));
endmodule
`timescale 1ns / 1ps

module reg_to_bus_4bit_sel_MUSER_CPU_main(R0, 
                                          R1, 
                                          R2, 
                                          R3, 
                                          R4, 
                                          R5, 
                                          R6, 
                                          R7, 
                                          R8, 
                                          R9, 
                                          R10, 
                                          R11, 
                                          R12, 
                                          R13, 
                                          R14, 
                                          R15, 
                                          SEL_4B, 
                                          TO_BUS_X);

    input [15:0] R0;
    input [15:0] R1;
    input [15:0] R2;
    input [15:0] R3;
    input [15:0] R4;
    input [15:0] R5;
    input [15:0] R6;
    input [15:0] R7;
    input [15:0] R8;
    input [15:0] R9;
    input [15:0] R10;
    input [15:0] R11;
    input [15:0] R12;
    input [15:0] R13;
    input [15:0] R14;
    input [15:0] R15;
    input [3:0] SEL_4B;
   output [15:0] TO_BUS_X;
   
   wire [15:0] XLXN_1;
   wire [15:0] XLXN_2;
   
   reg_to_bus_3bit_sel_MUSER_CPU_main  XLXI_2 (.R0(R0[15:0]), 
                                              .R1(R1[15:0]), 
                                              .R2(R2[15:0]), 
                                              .R3(R3[15:0]), 
                                              .R4(R4[15:0]), 
                                              .R5(R5[15:0]), 
                                              .R6(R6[15:0]), 
                                              .R7(R7[15:0]), 
                                              .SEL_B(SEL_4B[2:0]), 
                                              .TO_BUS_3B(XLXN_1[15:0]));
   reg_to_bus_3bit_sel_MUSER_CPU_main  XLXI_3 (.R0(R8[15:0]), 
                                              .R1(R9[15:0]), 
                                              .R2(R10[15:0]), 
                                              .R3(R11[15:0]), 
                                              .R4(R12[15:0]), 
                                              .R5(R13[15:0]), 
                                              .R6(R14[15:0]), 
                                              .R7(R15[15:0]), 
                                              .SEL_B(SEL_4B[2:0]), 
                                              .TO_BUS_3B(XLXN_2[15:0]));
   reg_to_bus_1bit_sel  XLXI_4 (.R0(XLXN_1[15:0]), 
                               .R1(XLXN_2[15:0]), 
                               .SEL_BUS(SEL_4B[3]), 
                               .TO_BUS(TO_BUS_X[15:0]));
endmodule
`timescale 1ns / 1ps

module reg_to_bus_5bit_sel_MUSER_CPU_main(R0, 
                                          R1, 
                                          R2, 
                                          R3, 
                                          R4, 
                                          R5, 
                                          R6, 
                                          R7, 
                                          R8, 
                                          R9, 
                                          R10, 
                                          R11, 
                                          R12, 
                                          R13, 
                                          R14, 
                                          R15, 
                                          R16, 
                                          R17, 
                                          R18, 
                                          R19, 
                                          R20, 
                                          R21, 
                                          R22, 
                                          R23, 
                                          R24, 
                                          R25, 
                                          R26, 
                                          R27, 
                                          R28, 
                                          R29, 
                                          R30, 
                                          R31, 
                                          SEL_5B, 
                                          TO_BUS);

    input [15:0] R0;
    input [15:0] R1;
    input [15:0] R2;
    input [15:0] R3;
    input [15:0] R4;
    input [15:0] R5;
    input [15:0] R6;
    input [15:0] R7;
    input [15:0] R8;
    input [15:0] R9;
    input [15:0] R10;
    input [15:0] R11;
    input [15:0] R12;
    input [15:0] R13;
    input [15:0] R14;
    input [15:0] R15;
    input [15:0] R16;
    input [15:0] R17;
    input [15:0] R18;
    input [15:0] R19;
    input [15:0] R20;
    input [15:0] R21;
    input [15:0] R22;
    input [15:0] R23;
    input [15:0] R24;
    input [15:0] R25;
    input [15:0] R26;
    input [15:0] R27;
    input [15:0] R28;
    input [15:0] R29;
    input [15:0] R30;
    input [15:0] R31;
    input [4:0] SEL_5B;
   output [15:0] TO_BUS;
   
   wire [15:0] XLXN_1;
   wire [15:0] XLXN_2;
   
   reg_to_bus_4bit_sel_MUSER_CPU_main  XLXI_1 (.R0(R0[15:0]), 
                                              .R1(R1[15:0]), 
                                              .R2(R2[15:0]), 
                                              .R3(R3[15:0]), 
                                              .R4(R4[15:0]), 
                                              .R5(R5[15:0]), 
                                              .R6(R6[15:0]), 
                                              .R7(R7[15:0]), 
                                              .R8(R8[15:0]), 
                                              .R9(R9[15:0]), 
                                              .R10(R10[15:0]), 
                                              .R11(R11[15:0]), 
                                              .R12(R12[15:0]), 
                                              .R13(R13[15:0]), 
                                              .R14(R14[15:0]), 
                                              .R15(R15[15:0]), 
                                              .SEL_4B(SEL_5B[3:0]), 
                                              .TO_BUS_X(XLXN_1[15:0]));
   reg_to_bus_4bit_sel_MUSER_CPU_main  XLXI_2 (.R0(R16[15:0]), 
                                              .R1(R17[15:0]), 
                                              .R2(R18[15:0]), 
                                              .R3(R19[15:0]), 
                                              .R4(R20[15:0]), 
                                              .R5(R21[15:0]), 
                                              .R6(R22[15:0]), 
                                              .R7(R23[15:0]), 
                                              .R8(R24[15:0]), 
                                              .R9(R25[15:0]), 
                                              .R10(R26[15:0]), 
                                              .R11(R27[15:0]), 
                                              .R12(R28[15:0]), 
                                              .R13(R29[15:0]), 
                                              .R14(R30[15:0]), 
                                              .R15(R31[15:0]), 
                                              .SEL_4B(SEL_5B[3:0]), 
                                              .TO_BUS_X(XLXN_2[15:0]));
   reg_to_bus_1bit_sel  XLXI_3 (.R0(XLXN_1[15:0]), 
                               .R1(XLXN_2[15:0]), 
                               .SEL_BUS(SEL_5B[4]), 
                               .TO_BUS(TO_BUS[15:0]));
endmodule
`timescale 1ns / 1ps

module reg_to_bus_6bit_sel_MUSER_CPU_main(R0, 
                                          R1, 
                                          R2, 
                                          R3, 
                                          R4, 
                                          R5, 
                                          R6, 
                                          R7, 
                                          R8, 
                                          R9, 
                                          R10, 
                                          R11, 
                                          R12, 
                                          R13, 
                                          R14, 
                                          R15, 
                                          R16, 
                                          R17, 
                                          R18, 
                                          R19, 
                                          R20, 
                                          R21, 
                                          R22, 
                                          R23, 
                                          R24, 
                                          R25, 
                                          R26, 
                                          R27, 
                                          R28, 
                                          R29, 
                                          R30, 
                                          R31, 
                                          R32, 
                                          R33, 
                                          R34, 
                                          R35, 
                                          R36, 
                                          R37, 
                                          R38, 
                                          R39, 
                                          R40, 
                                          R41, 
                                          R42, 
                                          R43, 
                                          R44, 
                                          R45, 
                                          R46, 
                                          R47, 
                                          R48, 
                                          R49, 
                                          R50, 
                                          R51, 
                                          R52, 
                                          R53, 
                                          R54, 
                                          R55, 
                                          R56, 
                                          R57, 
                                          R58, 
                                          R59, 
                                          R60, 
                                          R61, 
                                          R62, 
                                          R63, 
                                          SEL, 
                                          TO_BUS);

    input [15:0] R0;
    input [15:0] R1;
    input [15:0] R2;
    input [15:0] R3;
    input [15:0] R4;
    input [15:0] R5;
    input [15:0] R6;
    input [15:0] R7;
    input [15:0] R8;
    input [15:0] R9;
    input [15:0] R10;
    input [15:0] R11;
    input [15:0] R12;
    input [15:0] R13;
    input [15:0] R14;
    input [15:0] R15;
    input [15:0] R16;
    input [15:0] R17;
    input [15:0] R18;
    input [15:0] R19;
    input [15:0] R20;
    input [15:0] R21;
    input [15:0] R22;
    input [15:0] R23;
    input [15:0] R24;
    input [15:0] R25;
    input [15:0] R26;
    input [15:0] R27;
    input [15:0] R28;
    input [15:0] R29;
    input [15:0] R30;
    input [15:0] R31;
    input [15:0] R32;
    input [15:0] R33;
    input [15:0] R34;
    input [15:0] R35;
    input [15:0] R36;
    input [15:0] R37;
    input [15:0] R38;
    input [15:0] R39;
    input [15:0] R40;
    input [15:0] R41;
    input [15:0] R42;
    input [15:0] R43;
    input [15:0] R44;
    input [15:0] R45;
    input [15:0] R46;
    input [15:0] R47;
    input [15:0] R48;
    input [15:0] R49;
    input [15:0] R50;
    input [15:0] R51;
    input [15:0] R52;
    input [15:0] R53;
    input [15:0] R54;
    input [15:0] R55;
    input [15:0] R56;
    input [15:0] R57;
    input [15:0] R58;
    input [15:0] R59;
    input [15:0] R60;
    input [15:0] R61;
    input [15:0] R62;
    input [15:0] R63;
    input [5:0] SEL;
   output [15:0] TO_BUS;
   
   wire [15:0] XLXN_1;
   wire [15:0] XLXN_2;
   
   reg_to_bus_5bit_sel_MUSER_CPU_main  XLXI_1 (.R0(R0[15:0]), 
                                              .R1(R1[15:0]), 
                                              .R2(R2[15:0]), 
                                              .R3(R3[15:0]), 
                                              .R4(R4[15:0]), 
                                              .R5(R5[15:0]), 
                                              .R6(R6[15:0]), 
                                              .R7(R7[15:0]), 
                                              .R8(R8[15:0]), 
                                              .R9(R9[15:0]), 
                                              .R10(R10[15:0]), 
                                              .R11(R11[15:0]), 
                                              .R12(R12[15:0]), 
                                              .R13(R13[15:0]), 
                                              .R14(R14[15:0]), 
                                              .R15(R15[15:0]), 
                                              .R16(R16[15:0]), 
                                              .R17(R17[15:0]), 
                                              .R18(R18[15:0]), 
                                              .R19(R19[15:0]), 
                                              .R20(R20[15:0]), 
                                              .R21(R21[15:0]), 
                                              .R22(R22[15:0]), 
                                              .R23(R23[15:0]), 
                                              .R24(R24[15:0]), 
                                              .R25(R25[15:0]), 
                                              .R26(R26[15:0]), 
                                              .R27(R27[15:0]), 
                                              .R28(R28[15:0]), 
                                              .R29(R29[15:0]), 
                                              .R30(R30[15:0]), 
                                              .R31(R31[15:0]), 
                                              .SEL_5B(SEL[4:0]), 
                                              .TO_BUS(XLXN_2[15:0]));
   reg_to_bus_5bit_sel_MUSER_CPU_main  XLXI_2 (.R0(R32[15:0]), 
                                              .R1(R33[15:0]), 
                                              .R2(R34[15:0]), 
                                              .R3(R35[15:0]), 
                                              .R4(R36[15:0]), 
                                              .R5(R37[15:0]), 
                                              .R6(R38[15:0]), 
                                              .R7(R39[15:0]), 
                                              .R8(R40[15:0]), 
                                              .R9(R41[15:0]), 
                                              .R10(R42[15:0]), 
                                              .R11(R43[15:0]), 
                                              .R12(R44[15:0]), 
                                              .R13(R45[15:0]), 
                                              .R14(R46[15:0]), 
                                              .R15(R47[15:0]), 
                                              .R16(R48[15:0]), 
                                              .R17(R49[15:0]), 
                                              .R18(R50[15:0]), 
                                              .R19(R51[15:0]), 
                                              .R20(R52[15:0]), 
                                              .R21(R53[15:0]), 
                                              .R22(R54[15:0]), 
                                              .R23(R55[15:0]), 
                                              .R24(R56[15:0]), 
                                              .R25(R57[15:0]), 
                                              .R26(R58[15:0]), 
                                              .R27(R59[15:0]), 
                                              .R28(R60[15:0]), 
                                              .R29(R61[15:0]), 
                                              .R30(R62[15:0]), 
                                              .R31(R63[15:0]), 
                                              .SEL_5B(SEL[4:0]), 
                                              .TO_BUS(XLXN_1[15:0]));
   reg_to_bus_1bit_sel  XLXI_3 (.R0(XLXN_2[15:0]), 
                               .R1(XLXN_1[15:0]), 
                               .SEL_BUS(SEL[5]), 
                               .TO_BUS(TO_BUS[15:0]));
endmodule
`timescale 1ns / 1ps

module bloque_3_MUSER_CPU_main(R0, 
                               R1, 
                               R2, 
                               R3, 
                               R4, 
                               R5, 
                               R6, 
                               R7, 
                               R8, 
                               R9, 
                               R10, 
                               R11, 
                               R12, 
                               R13, 
                               R14, 
                               R15, 
                               R16, 
                               R17, 
                               R18, 
                               R19, 
                               R20, 
                               R21, 
                               R22, 
                               R23, 
                               R24, 
                               R25, 
                               R26, 
                               R27, 
                               R28, 
                               R29, 
                               R30, 
                               R31, 
                               R32, 
                               R33, 
                               R34, 
                               SEL_BUS_A, 
                               SEL_BUS_B, 
                               TO_BUS_A, 
                               TO_BUS_B);

    input [15:0] R0;
    input [15:0] R1;
    input [15:0] R2;
    input [15:0] R3;
    input [15:0] R4;
    input [15:0] R5;
    input [15:0] R6;
    input [15:0] R7;
    input [15:0] R8;
    input [15:0] R9;
    input [15:0] R10;
    input [15:0] R11;
    input [15:0] R12;
    input [15:0] R13;
    input [15:0] R14;
    input [15:0] R15;
    input [15:0] R16;
    input [15:0] R17;
    input [15:0] R18;
    input [15:0] R19;
    input [15:0] R20;
    input [15:0] R21;
    input [15:0] R22;
    input [15:0] R23;
    input [15:0] R24;
    input [15:0] R25;
    input [15:0] R26;
    input [15:0] R27;
    input [15:0] R28;
    input [15:0] R29;
    input [15:0] R30;
    input [15:0] R31;
    input [15:0] R32;
    input [15:0] R33;
    input [15:0] R34;
    input [5:0] SEL_BUS_A;
    input [5:0] SEL_BUS_B;
   output [15:0] TO_BUS_A;
   output [15:0] TO_BUS_B;
   
   
   reg_to_bus_6bit_sel_MUSER_CPU_main  XLXI_3 (.R0(R0[15:0]), 
                                              .R1(R1[15:0]), 
                                              .R2(R2[15:0]), 
                                              .R3(R3[15:0]), 
                                              .R4(R4[15:0]), 
                                              .R5(R5[15:0]), 
                                              .R6(R6[15:0]), 
                                              .R7(R7[15:0]), 
                                              .R8(R8[15:0]), 
                                              .R9(R9[15:0]), 
                                              .R10(R10[15:0]), 
                                              .R11(R11[15:0]), 
                                              .R12(R12[15:0]), 
                                              .R13(R13[15:0]), 
                                              .R14(R14[15:0]), 
                                              .R15(R15[15:0]), 
                                              .R16(R16[15:0]), 
                                              .R17(R17[15:0]), 
                                              .R18(R18[15:0]), 
                                              .R19(R19[15:0]), 
                                              .R20(R20[15:0]), 
                                              .R21(R21[15:0]), 
                                              .R22(R22[15:0]), 
                                              .R23(R23[15:0]), 
                                              .R24(R24[15:0]), 
                                              .R25(R25[15:0]), 
                                              .R26(R26[15:0]), 
                                              .R27(R27[15:0]), 
                                              .R28(R28[15:0]), 
                                              .R29(R29[15:0]), 
                                              .R30(R30[15:0]), 
                                              .R31(R31[15:0]), 
                                              .R32(R32[15:0]), 
                                              .R33(R33[15:0]), 
                                              .R34(R34[15:0]), 
                                              .R35(), 
                                              .R36(), 
                                              .R37(), 
                                              .R38(), 
                                              .R39(), 
                                              .R40(), 
                                              .R41(), 
                                              .R42(), 
                                              .R43(), 
                                              .R44(), 
                                              .R45(), 
                                              .R46(), 
                                              .R47(), 
                                              .R48(), 
                                              .R49(), 
                                              .R50(), 
                                              .R51(), 
                                              .R52(), 
                                              .R53(), 
                                              .R54(), 
                                              .R55(), 
                                              .R56(), 
                                              .R57(), 
                                              .R58(), 
                                              .R59(), 
                                              .R60(), 
                                              .R61(), 
                                              .R62(), 
                                              .R63(), 
                                              .SEL(SEL_BUS_A[5:0]), 
                                              .TO_BUS(TO_BUS_A[15:0]));
   reg_to_bus_6bit_sel_MUSER_CPU_main  XLXI_4 (.R0(R0[15:0]), 
                                              .R1(R1[15:0]), 
                                              .R2(R2[15:0]), 
                                              .R3(R3[15:0]), 
                                              .R4(R4[15:0]), 
                                              .R5(R5[15:0]), 
                                              .R6(R6[15:0]), 
                                              .R7(R7[15:0]), 
                                              .R8(R8[15:0]), 
                                              .R9(R9[15:0]), 
                                              .R10(R10[15:0]), 
                                              .R11(R11[15:0]), 
                                              .R12(R12[15:0]), 
                                              .R13(R13[15:0]), 
                                              .R14(R14[15:0]), 
                                              .R15(R15[15:0]), 
                                              .R16(R16[15:0]), 
                                              .R17(R17[15:0]), 
                                              .R18(R18[15:0]), 
                                              .R19(R19[15:0]), 
                                              .R20(R20[15:0]), 
                                              .R21(R21[15:0]), 
                                              .R22(R22[15:0]), 
                                              .R23(R23[15:0]), 
                                              .R24(R24[15:0]), 
                                              .R25(R25[15:0]), 
                                              .R26(R26[15:0]), 
                                              .R27(R27[15:0]), 
                                              .R28(R28[15:0]), 
                                              .R29(R29[15:0]), 
                                              .R30(R30[15:0]), 
                                              .R31(R31[15:0]), 
                                              .R32(R32[15:0]), 
                                              .R33(R33[15:0]), 
                                              .R34(R34[15:0]), 
                                              .R35(), 
                                              .R36(), 
                                              .R37(), 
                                              .R38(), 
                                              .R39(), 
                                              .R40(), 
                                              .R41(), 
                                              .R42(), 
                                              .R43(), 
                                              .R44(), 
                                              .R45(), 
                                              .R46(), 
                                              .R47(), 
                                              .R48(), 
                                              .R49(), 
                                              .R50(), 
                                              .R51(), 
                                              .R52(), 
                                              .R53(), 
                                              .R54(), 
                                              .R55(), 
                                              .R56(), 
                                              .R57(), 
                                              .R58(), 
                                              .R59(), 
                                              .R60(), 
                                              .R61(), 
                                              .R62(), 
                                              .R63(), 
                                              .SEL(SEL_BUS_B[5:0]), 
                                              .TO_BUS(TO_BUS_B[15:0]));
endmodule
`timescale 1ns / 1ps

module register_bank_MUSER_CPU_main(C, 
                                    CLK, 
                                    FROM_BUS, 
                                    IN0, 
                                    IN1, 
                                    LEVEL, 
                                    MR, 
                                    MW, 
                                    SEL_A, 
                                    SEL_B, 
                                    TO_BUS_A, 
                                    TO_BUS_B, 
                                    WORKING_REGISTER, 
                                    TO_FROM_W);

    input [5:0] C;
    input CLK;
    input [15:0] FROM_BUS;
    input [15:0] IN0;
    input [15:0] IN1;
    input [2:0] LEVEL;
    input MR;
    input MW;
    input [5:0] SEL_A;
    input [5:0] SEL_B;
   output [15:0] TO_BUS_A;
   output [15:0] TO_BUS_B;
   output [15:0] WORKING_REGISTER;
    inout [15:0] TO_FROM_W;
   
   wire [15:0] AUX0;
   wire [15:0] AUX1;
   wire [15:0] MUXAUX0;
   wire [15:0] MUXAUX1;
   wire [15:0] MUXIN0;
   wire [15:0] MUXIN1;
   wire [15:0] MUXOUT0;
   wire [15:0] MUXOUT1;
   wire [15:0] MUXR0;
   wire [15:0] MUXR1;
   wire [15:0] MUXR2;
   wire [15:0] MUXR3;
   wire [15:0] MUXR4;
   wire [15:0] MUXR5;
   wire [15:0] MUXR6;
   wire [15:0] MUXR7;
   wire [15:0] MUXR8;
   wire [15:0] MUXR9;
   wire [15:0] MUXR10;
   wire [15:0] MUXR11;
   wire [15:0] MUXR12;
   wire [15:0] MUXR13;
   wire [15:0] MUXR14;
   wire [15:0] MUXR15;
   wire [15:0] MUXR16;
   wire [15:0] MUXR17;
   wire [15:0] MUXR18;
   wire [15:0] MUXR19;
   wire [15:0] MUXR20;
   wire [15:0] MUXR21;
   wire [15:0] MUXR22;
   wire [15:0] MUXR23;
   wire [15:0] MUXR24;
   wire [15:0] MUXR25;
   wire [15:0] MUXR26;
   wire [15:0] MUXR27;
   wire [15:0] OUT0;
   wire [15:0] OUT1;
   wire [15:0] R0;
   wire [15:0] R1;
   wire [15:0] R2;
   wire [15:0] R3;
   wire [15:0] R4;
   wire [15:0] R5;
   wire [15:0] R6;
   wire [15:0] R7;
   wire [15:0] R8;
   wire [15:0] R9;
   wire [15:0] R10;
   wire [15:0] R11;
   wire [15:0] R12;
   wire [15:0] R13;
   wire [15:0] R14;
   wire [15:0] R15;
   wire [15:0] R16;
   wire [15:0] R17;
   wire [15:0] R18;
   wire [15:0] R19;
   wire [15:0] R20;
   wire [15:0] R21;
   wire [15:0] R22;
   wire [15:0] R23;
   wire [15:0] R24;
   wire [15:0] R25;
   wire [15:0] R26;
   wire [15:0] R27;
   wire WAUX0;
   wire WAUX1;
   wire [15:0] WORK_REG;
   wire WOUT0;
   wire WOUT1;
   wire WR_WORK_REG;
   wire WR0;
   wire WR1;
   wire WR2;
   wire WR3;
   wire WR4;
   wire WR5;
   wire WR6;
   wire WR7;
   wire WR8;
   wire WR9;
   wire WR10;
   wire WR11;
   wire WR12;
   wire WR13;
   wire WR14;
   wire WR15;
   wire WR16;
   wire WR17;
   wire WR18;
   wire WR19;
   wire WR20;
   wire WR21;
   wire WR22;
   wire WR23;
   wire WR24;
   wire WR25;
   wire WR26;
   wire WR27;
   wire XLXN_1;
   wire XLXN_37;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_42;
   wire [15:0] WORKING_REGISTER_DUMMY;
   
   assign WORKING_REGISTER[15:0] = WORKING_REGISTER_DUMMY[15:0];
   bloque2_MUSER_CPU_main  XLXI_1 (.C(C[5:0]), 
                                  .CLK(CLK), 
                                  .FROM_BUS(FROM_BUS[15:0]), 
                                  .FROM_WREG(WORKING_REGISTER_DUMMY[15:0]), 
                                  .MR(MR), 
                                  .MW(MW), 
                                  .AUX0(AUX0[15:0]), 
                                  .AUX1(AUX1[15:0]), 
                                  .IN_WORK_REG(WORK_REG[15:0]), 
                                  .OUTPORT0(OUT0[15:0]), 
                                  .OUTPORT1(OUT1[15:0]), 
                                  .R0(R0[15:0]), 
                                  .R1(R1[15:0]), 
                                  .R2(R2[15:0]), 
                                  .R3(R3[15:0]), 
                                  .R4(R4[15:0]), 
                                  .R5(R5[15:0]), 
                                  .R6(R6[15:0]), 
                                  .R7(R7[15:0]), 
                                  .R8(R8[15:0]), 
                                  .R9(R9[15:0]), 
                                  .R10(R10[15:0]), 
                                  .R11(R11[15:0]), 
                                  .R12(R12[15:0]), 
                                  .R13(R13[15:0]), 
                                  .R14(R14[15:0]), 
                                  .R15(R15[15:0]), 
                                  .R16(R16[15:0]), 
                                  .R17(R17[15:0]), 
                                  .R18(R18[15:0]), 
                                  .R19(R19[15:0]), 
                                  .R20(R20[15:0]), 
                                  .R21(R21[15:0]), 
                                  .R22(R22[15:0]), 
                                  .R23(R23[15:0]), 
                                  .R24(R24[15:0]), 
                                  .R25(R25[15:0]), 
                                  .R26(R26[15:0]), 
                                  .R27(R27[15:0]), 
                                  .WAUX0(WAUX0), 
                                  .WAUX1(WAUX1), 
                                  .WOUTPORT0(WOUT0), 
                                  .WOUTPORT1(WOUT1), 
                                  .WR_WORK_REG(WR_WORK_REG), 
                                  .WR0(WR0), 
                                  .WR1(WR1), 
                                  .WR2(WR2), 
                                  .WR3(WR3), 
                                  .WR4(WR4), 
                                  .WR5(WR5), 
                                  .WR6(WR6), 
                                  .WR7(WR7), 
                                  .WR8(WR8), 
                                  .WR9(WR9), 
                                  .WR10(WR10), 
                                  .WR11(WR11), 
                                  .WR12(WR12), 
                                  .WR13(WR13), 
                                  .WR14(WR14), 
                                  .WR15(WR15), 
                                  .WR16(WR16), 
                                  .WR17(WR17), 
                                  .WR18(WR18), 
                                  .WR19(WR19), 
                                  .WR20(WR20), 
                                  .WR21(WR21), 
                                  .WR22(WR22), 
                                  .WR23(WR23), 
                                  .WR24(WR24), 
                                  .WR25(WR25), 
                                  .WR26(WR26), 
                                  .WR27(WR27), 
                                  .TO_FROM_W(TO_FROM_W[15:0]));
   bloque_3_MUSER_CPU_main  XLXI_2 (.R0(MUXR0[15:0]), 
                                   .R1(MUXR1[15:0]), 
                                   .R2(MUXR2[15:0]), 
                                   .R3(MUXR3[15:0]), 
                                   .R4(MUXR4[15:0]), 
                                   .R5(MUXR5[15:0]), 
                                   .R6(MUXR6[15:0]), 
                                   .R7(MUXR7[15:0]), 
                                   .R8(MUXR8[15:0]), 
                                   .R9(MUXR9[15:0]), 
                                   .R10(MUXR10[15:0]), 
                                   .R11(MUXR11[15:0]), 
                                   .R12(MUXR12[15:0]), 
                                   .R13(MUXR13[15:0]), 
                                   .R14(MUXR14[15:0]), 
                                   .R15(MUXR15[15:0]), 
                                   .R16(MUXR16[15:0]), 
                                   .R17(MUXR17[15:0]), 
                                   .R18(MUXR18[15:0]), 
                                   .R19(MUXR19[15:0]), 
                                   .R20(MUXR20[15:0]), 
                                   .R21(MUXR21[15:0]), 
                                   .R22(MUXR22[15:0]), 
                                   .R23(MUXR23[15:0]), 
                                   .R24(MUXR24[15:0]), 
                                   .R25(MUXR25[15:0]), 
                                   .R26(MUXR26[15:0]), 
                                   .R27(MUXR27[15:0]), 
                                   .R28(MUXIN0[15:0]), 
                                   .R29(MUXIN1[15:0]), 
                                   .R30(MUXOUT0[15:0]), 
                                   .R31(MUXOUT1[15:0]), 
                                   .R32(MUXAUX0[15:0]), 
                                   .R33(MUXAUX1[15:0]), 
                                   .R34(WORKING_REGISTER_DUMMY[15:0]), 
                                   .SEL_BUS_A(SEL_A[5:0]), 
                                   .SEL_BUS_B(SEL_B[5:0]), 
                                   .TO_BUS_A(TO_BUS_A[15:0]), 
                                   .TO_BUS_B(TO_BUS_B[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_100 (.CLK(CLK), 
                                       .D(R4[15:0]), 
                                       .EN(WR4), 
                                       .Q(MUXR4[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_101 (.CLK(CLK), 
                                       .D(R5[15:0]), 
                                       .EN(WR5), 
                                       .Q(MUXR5[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_102 (.CLK(CLK), 
                                       .D(R6[15:0]), 
                                       .EN(WR6), 
                                       .Q(MUXR6[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_103 (.CLK(CLK), 
                                       .D(R7[15:0]), 
                                       .EN(WR7), 
                                       .Q(MUXR7[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_104 (.CLK(CLK), 
                                       .D(R8[15:0]), 
                                       .EN(WR8), 
                                       .Q(MUXR8[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_105 (.CLK(CLK), 
                                       .D(R9[15:0]), 
                                       .EN(WR9), 
                                       .Q(MUXR9[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_107 (.CLK(CLK), 
                                       .D(R10[15:0]), 
                                       .EN(WR10), 
                                       .Q(MUXR10[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_108 (.CLK(CLK), 
                                       .D(R11[15:0]), 
                                       .EN(WR11), 
                                       .Q(MUXR11[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_109 (.CLK(CLK), 
                                       .D(R12[15:0]), 
                                       .EN(WR12), 
                                       .Q(MUXR12[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_110 (.CLK(CLK), 
                                       .D(R13[15:0]), 
                                       .EN(WR13), 
                                       .Q(MUXR13[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_111 (.CLK(CLK), 
                                       .D(R14[15:0]), 
                                       .EN(WR14), 
                                       .Q(MUXR14[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_112 (.CLK(CLK), 
                                       .D(R15[15:0]), 
                                       .EN(WR15), 
                                       .Q(MUXR15[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_113 (.CLK(CLK), 
                                       .D(R16[15:0]), 
                                       .EN(WR16), 
                                       .Q(MUXR16[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_114 (.CLK(CLK), 
                                       .D(R17[15:0]), 
                                       .EN(WR17), 
                                       .Q(MUXR17[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_115 (.CLK(CLK), 
                                       .D(R18[15:0]), 
                                       .EN(WR18), 
                                       .Q(MUXR18[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_116 (.CLK(CLK), 
                                       .D(R19[15:0]), 
                                       .EN(WR19), 
                                       .Q(MUXR19[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_117 (.CLK(CLK), 
                                       .D(R20[15:0]), 
                                       .EN(WR20), 
                                       .Q(MUXR20[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_118 (.CLK(CLK), 
                                       .D(R21[15:0]), 
                                       .EN(WR21), 
                                       .Q(MUXR21[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_119 (.CLK(CLK), 
                                       .D(R22[15:0]), 
                                       .EN(WR22), 
                                       .Q(MUXR22[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_120 (.CLK(CLK), 
                                       .D(R23[15:0]), 
                                       .EN(WR23), 
                                       .Q(MUXR23[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_121 (.CLK(CLK), 
                                       .D(R24[15:0]), 
                                       .EN(WR24), 
                                       .Q(MUXR24[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_122 (.CLK(CLK), 
                                       .D(R25[15:0]), 
                                       .EN(WR25), 
                                       .Q(MUXR25[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_123 (.CLK(CLK), 
                                       .D(R26[15:0]), 
                                       .EN(WR26), 
                                       .Q(MUXR26[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_124 (.CLK(CLK), 
                                       .D(R27[15:0]), 
                                       .EN(WR27), 
                                       .Q(MUXR27[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_125 (.CLK(CLK), 
                                       .D(IN0[15:0]), 
                                       .EN(XLXN_1), 
                                       .Q(MUXIN0[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_126 (.CLK(CLK), 
                                       .D(IN1[15:0]), 
                                       .EN(XLXN_1), 
                                       .Q(MUXIN1[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_127 (.CLK(CLK), 
                                       .D(OUT0[15:0]), 
                                       .EN(WOUT0), 
                                       .Q(MUXOUT0[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_128 (.CLK(CLK), 
                                       .D(OUT1[15:0]), 
                                       .EN(WOUT1), 
                                       .Q(MUXOUT1[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_129 (.CLK(CLK), 
                                       .D(AUX0[15:0]), 
                                       .EN(WAUX0), 
                                       .Q(MUXAUX0[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_130 (.CLK(CLK), 
                                       .D(AUX1[15:0]), 
                                       .EN(WAUX1), 
                                       .Q(MUXAUX1[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_131 (.CLK(CLK), 
                                       .D(WORK_REG[15:0]), 
                                       .EN(WR_WORK_REG), 
                                       .Q(WORKING_REGISTER_DUMMY[15:0]));
   VCC  XLXI_132 (.P(XLXN_1));
   jsr_backup_reg_MUSER_CPU_main  XLXI_133 (.CLK(XLXN_42), 
                                           .IN_R(R0[15:0]), 
                                           .LEVEL(LEVEL[2:0]), 
                                           .OUT_R(MUXR0[15:0]));
   jsr_backup_reg_MUSER_CPU_main  XLXI_134 (.CLK(XLXN_41), 
                                           .IN_R(R1[15:0]), 
                                           .LEVEL(LEVEL[2:0]), 
                                           .OUT_R(MUXR1[15:0]));
   jsr_backup_reg_MUSER_CPU_main  XLXI_135 (.CLK(XLXN_40), 
                                           .IN_R(R2[15:0]), 
                                           .LEVEL(LEVEL[2:0]), 
                                           .OUT_R(MUXR2[15:0]));
   jsr_backup_reg_MUSER_CPU_main  XLXI_136 (.CLK(XLXN_37), 
                                           .IN_R(R3[15:0]), 
                                           .LEVEL(LEVEL[2:0]), 
                                           .OUT_R(MUXR3[15:0]));
   AND2  XLXI_137 (.I0(WR3), 
                  .I1(CLK), 
                  .O(XLXN_37));
   AND2  XLXI_138 (.I0(WR2), 
                  .I1(CLK), 
                  .O(XLXN_40));
   AND2  XLXI_139 (.I0(WR1), 
                  .I1(CLK), 
                  .O(XLXN_41));
   AND2  XLXI_140 (.I0(WR0), 
                  .I1(CLK), 
                  .O(XLXN_42));
endmodule
`timescale 1ns / 1ps

module register_bank_easy_MUSER_CPU_main(CLK, 
                                         C_SEL, 
                                         FROM_C_LATCH, 
                                         IN0, 
                                         IN1, 
                                         LEVEL, 
                                         MR, 
                                         MW, 
                                         SEL_A, 
                                         SEL_B, 
                                         TO_BUS_A, 
                                         TO_BUS_B, 
                                         WORKING_REGISTER, 
                                         TO_FROM_W);

    input CLK;
    input [5:0] C_SEL;
    input [15:0] FROM_C_LATCH;
    input [15:0] IN0;
    input [15:0] IN1;
    input [2:0] LEVEL;
    input MR;
    input MW;
    input [5:0] SEL_A;
    input [5:0] SEL_B;
   output [15:0] TO_BUS_A;
   output [15:0] TO_BUS_B;
   output [15:0] WORKING_REGISTER;
    inout [15:0] TO_FROM_W;
   
   
   register_bank_MUSER_CPU_main  XLXI_14 (.C(C_SEL[5:0]), 
                                         .CLK(CLK), 
                                         .FROM_BUS(FROM_C_LATCH[15:0]), 
                                         .IN0(IN0[15:0]), 
                                         .IN1(IN1[15:0]), 
                                         .LEVEL(LEVEL[2:0]), 
                                         .MR(MR), 
                                         .MW(MW), 
                                         .SEL_A(SEL_A[5:0]), 
                                         .SEL_B(SEL_B[5:0]), 
                                         .TO_BUS_A(TO_BUS_A[15:0]), 
                                         .TO_BUS_B(TO_BUS_B[15:0]), 
                                         
         .WORKING_REGISTER(WORKING_REGISTER[15:0]), 
                                         .TO_FROM_W(TO_FROM_W[15:0]));
endmodule
`timescale 1ns / 1ps

module ALU_main_MUSER_CPU_main(A, 
                               ALUC, 
                               B, 
                               CY, 
                               GND, 
                               VCC, 
                               CO, 
                               Z);

    input [15:0] A;
    input [3:0] ALUC;
    input [15:0] B;
    input CY;
    input [15:0] GND;
    input [15:0] VCC;
   output CO;
   output [15:0] Z;
   
   wire [15:0] AdderOut;
   wire A_AND_B;
   wire A_m_B;
   wire A_OR_B;
   wire A_p_B;
   wire A_p_B_p_CY;
   wire A_SEL_1;
   wire A_SEL_2;
   wire B_SEL_1;
   wire B_SEL_2;
   wire CO_A;
   wire CO_B;
   wire CY_EN;
   wire CY_0;
   wire CY_1;
   wire m_B;
   wire Not_A;
   wire Not_B;
   wire ONE;
   wire OP_SEL_1;
   wire OP_SEL_2;
   wire OUT_1b;
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire [15:0] XLXN_5;
   wire [15:0] XLXN_6;
   wire [15:0] XLXN_7;
   wire [15:0] XLXN_8;
   wire [15:0] XLXN_37;
   wire [15:0] XLXN_38;
   wire [15:0] XLXN_40;
   wire [15:0] XLXN_143;
   wire XLXN_215;
   wire XLXN_216;
   wire XLXN_222;
   wire XLXN_291;
   wire XLXN_292;
   wire XLXN_293;
   wire XLXN_295;
   wire XLXN_343;
   wire XLXN_344;
   wire XLXN_345;
   wire XLXN_346;
   wire XLXN_347;
   wire XLXN_348;
   wire ZERO;
   wire _A;
   wire _B;
   wire _0xFFFF;
   
   (* HU_SET = "ALUC_Decoder_49" *) 
   D4_16E_HXILINX_CPU_main  ALUC_Decoder (.A0(ALUC[0]), 
                                         .A1(ALUC[1]), 
                                         .A2(ALUC[2]), 
                                         .A3(ALUC[3]), 
                                         .E(VCC[0]), 
                                         .D0(_A), 
                                         .D1(_B), 
                                         .D2(Not_A), 
                                         .D3(Not_B), 
                                         .D4(A_p_B), 
                                         .D5(A_p_B_p_CY), 
                                         .D6(A_OR_B), 
                                         .D7(A_AND_B), 
                                         .D8(ZERO), 
                                         .D9(ONE), 
                                         .D10(_0xFFFF), 
                                         .D11(CY_0), 
                                         .D12(CY_1), 
                                         .D13(A_m_B), 
                                         .D14(m_B), 
                                         .D15());
   AND_Bus16  A_AND_B_OP (.IN_0(A[15:0]), 
                         .IN_1(B[15:0]), 
                         .Y(XLXN_37[15:0]));
   Mux4Bus16  A_MUX (.IN_0(A[15:0]), 
                    .IN_1(XLXN_8[15:0]), 
                    .IN_2(GND[15:0]), 
                    .IN_3(VCC[15:0]), 
                    .S_0(A_SEL_2), 
                    .S_1(A_SEL_1), 
                    .Y(XLXN_5[15:0]));
   OR_Bus16  A_OR_B_OP (.IN_0(A[15:0]), 
                       .IN_1(B[15:0]), 
                       .Y(XLXN_40[15:0]));
   Mux2Bus16  B_MUX0 (.IN_0(B[15:0]), 
                     .IN_1(XLXN_143[15:0]), 
                     .S(B_SEL_1), 
                     .Y(XLXN_7[15:0]));
   Mux2Bus16  B_MUX1 (.IN_0(XLXN_7[15:0]), 
                     .IN_1(GND[15:0]), 
                     .S(B_SEL_2), 
                     .Y(XLXN_6[15:0]));
   Mux2Bus16  LOGIC_MUX0 (.IN_0(XLXN_37[15:0]), 
                         .IN_1(XLXN_40[15:0]), 
                         .S(OP_SEL_1), 
                         .Y(XLXN_38[15:0]));
   Mux2Bus16  LOGIC_MUX1 (.IN_0(XLXN_38[15:0]), 
                         .IN_1(AdderOut[15:0]), 
                         .S(OP_SEL_2), 
                         .Y(Z[15:0]));
   (* HU_SET = "XLXI_1_50" *) 
   ADD16_HXILINX_CPU_main  XLXI_1 (.A(XLXN_5[15:0]), 
                                  .B(XLXN_6[15:0]), 
                                  .CI(XLXN_2), 
                                  .CO(XLXN_3), 
                                  .OFL(), 
                                  .S(AdderOut[15:0]));
   AND2  XLXI_2 (.I0(XLXN_1), 
                .I1(CY_EN), 
                .O(XLXN_2));
   OR2  XLXI_3 (.I0(OUT_1b), 
               .I1(CY), 
               .O(XLXN_1));
   AND2  XLXI_5 (.I0(CO_A), 
                .I1(XLXN_3), 
                .O(XLXN_4));
   OR2  XLXI_6 (.I0(CO_B), 
               .I1(XLXN_4), 
               .O(CO));
   (* HU_SET = "XLXI_9_51" *) 
   INV16_HXILINX_CPU_main  XLXI_9 (.I(A[15:0]), 
                                  .O(XLXN_8[15:0]));
   (* HU_SET = "XLXI_10_52" *) 
   INV16_HXILINX_CPU_main  XLXI_10 (.I(B[15:0]), 
                                   .O(XLXN_143[15:0]));
   OR2  XLXI_86 (.I0(A_p_B_p_CY), 
                .I1(A_p_B), 
                .O(CO_A));
   OR2  XLXI_87 (.I0(CY_1), 
                .I1(CY_1), 
                .O(CO_B));
   OR2  XLXI_88 (.I0(A_OR_B), 
                .I1(A_OR_B), 
                .O(OP_SEL_1));
   AND2  XLXI_89 (.I0(XLXN_216), 
                 .I1(XLXN_215), 
                 .O(OP_SEL_2));
   INV  XLXI_90 (.I(A_OR_B), 
                .O(XLXN_215));
   INV  XLXI_91 (.I(A_AND_B), 
                .O(XLXN_216));
   INV  XLXI_92 (.I(_A), 
                .O(XLXN_222));
   INV  XLXI_93 (.I(Not_A), 
                .O(XLXN_291));
   INV  XLXI_94 (.I(A_p_B), 
                .O(XLXN_292));
   INV  XLXI_95 (.I(A_p_B_p_CY), 
                .O(XLXN_293));
   OR2  XLXI_104 (.I0(_0xFFFF), 
                 .I1(Not_A), 
                 .O(A_SEL_2));
   INV  XLXI_106 (.I(_B), 
                 .O(XLXN_343));
   INV  XLXI_107 (.I(Not_B), 
                 .O(XLXN_344));
   INV  XLXI_108 (.I(A_p_B), 
                 .O(XLXN_345));
   INV  XLXI_109 (.I(A_p_B_p_CY), 
                 .O(XLXN_346));
   OR4  XLXI_118 (.I0(m_B), 
                 .I1(A_m_B), 
                 .I2(ONE), 
                 .I3(A_p_B_p_CY), 
                 .O(CY_EN));
   OR3  XLXI_119 (.I0(m_B), 
                 .I1(A_m_B), 
                 .I2(ONE), 
                 .O(OUT_1b));
   AND5  XLXI_124 (.I0(XLXN_295), 
                  .I1(XLXN_293), 
                  .I2(XLXN_292), 
                  .I3(XLXN_291), 
                  .I4(XLXN_222), 
                  .O(A_SEL_1));
   INV  XLXI_125 (.I(A_m_B), 
                 .O(XLXN_295));
   OR3  XLXI_126 (.I0(m_B), 
                 .I1(A_m_B), 
                 .I2(Not_B), 
                 .O(B_SEL_1));
   INV  XLXI_141 (.I(A_m_B), 
                 .O(XLXN_347));
   INV  XLXI_142 (.I(m_B), 
                 .O(XLXN_348));
   (* HU_SET = "XLXI_143_53" *) 
   AND6_HXILINX_CPU_main  XLXI_143 (.I0(XLXN_348), 
                                   .I1(XLXN_347), 
                                   .I2(XLXN_346), 
                                   .I3(XLXN_345), 
                                   .I4(XLXN_344), 
                                   .I5(XLXN_343), 
                                   .O(B_SEL_2));
endmodule
`timescale 1ns / 1ps

module ALU_Reg_Join_MUSER_CPU_main(ALUC_IN, 
                                   CLK, 
                                   CY_IN, 
                                   C_SEL_RB, 
                                   DAddr, 
                                   LEVEL, 
                                   Rd, 
                                   SEL_A_RB, 
                                   SEL_B_RB, 
                                   Shifter_Sel, 
                                   Wr, 
                                   Y_KMx_IN, 
                                   Y_X_Kmx_Sel, 
                                   CY_OUT, 
                                   W_Block1);

    input [3:0] ALUC_IN;
    input CLK;
    input CY_IN;
    input [5:0] C_SEL_RB;
    input [9:0] DAddr;
    input [2:0] LEVEL;
    input Rd;
    input [5:0] SEL_A_RB;
    input [5:0] SEL_B_RB;
    input [1:0] Shifter_Sel;
    input Wr;
    input [15:0] Y_KMx_IN;
    input Y_X_Kmx_Sel;
   output CY_OUT;
   output [15:0] W_Block1;
   
   wire [15:0] XLXN_1;
   wire [15:0] XLXN_3;
   wire [15:0] XLXN_4;
   wire [15:0] XLXN_5;
   wire [15:0] XLXN_6;
   wire [15:0] XLXN_7;
   wire [15:0] XLXN_10;
   wire [15:0] XLXN_11;
   wire [15:0] XLXN_12;
   wire [15:0] XLXN_13;
   wire [15:0] XLXN_27;
   wire XLXN_31;
   wire XLXN_32;
   wire XLXN_33;
   wire [15:0] XLXN_49;
   
   GND  GND_0 (.G(XLXN_13[0]));
   GND  GND_1 (.G(XLXN_13[1]));
   GND  GND_2 (.G(XLXN_13[2]));
   GND  GND_3 (.G(XLXN_13[3]));
   GND  GND_4 (.G(XLXN_13[4]));
   GND  GND_5 (.G(XLXN_13[5]));
   GND  GND_6 (.G(XLXN_13[6]));
   GND  GND_7 (.G(XLXN_13[7]));
   GND  GND_8 (.G(XLXN_13[8]));
   GND  GND_9 (.G(XLXN_13[9]));
   GND  GND_10 (.G(XLXN_13[10]));
   GND  GND_11 (.G(XLXN_13[11]));
   GND  GND_12 (.G(XLXN_13[12]));
   GND  GND_13 (.G(XLXN_13[13]));
   GND  GND_14 (.G(XLXN_13[14]));
   GND  GND_15 (.G(XLXN_13[15]));
   GND  GND2_0 (.G(XLXN_27[0]));
   GND  GND2_1 (.G(XLXN_27[1]));
   GND  GND2_2 (.G(XLXN_27[2]));
   GND  GND2_3 (.G(XLXN_27[3]));
   GND  GND2_4 (.G(XLXN_27[4]));
   GND  GND2_5 (.G(XLXN_27[5]));
   GND  GND2_6 (.G(XLXN_27[6]));
   GND  GND2_7 (.G(XLXN_27[7]));
   GND  GND2_8 (.G(XLXN_27[8]));
   GND  GND2_9 (.G(XLXN_27[9]));
   GND  GND2_10 (.G(XLXN_27[10]));
   GND  GND2_11 (.G(XLXN_27[11]));
   GND  GND2_12 (.G(XLXN_27[12]));
   GND  GND2_13 (.G(XLXN_27[13]));
   GND  GND2_14 (.G(XLXN_27[14]));
   GND  GND2_15 (.G(XLXN_27[15]));
   VCC  VCC_0 (.P(XLXN_12[0]));
   VCC  VCC_1 (.P(XLXN_12[1]));
   VCC  VCC_2 (.P(XLXN_12[2]));
   VCC  VCC_3 (.P(XLXN_12[3]));
   VCC  VCC_4 (.P(XLXN_12[4]));
   VCC  VCC_5 (.P(XLXN_12[5]));
   VCC  VCC_6 (.P(XLXN_12[6]));
   VCC  VCC_7 (.P(XLXN_12[7]));
   VCC  VCC_8 (.P(XLXN_12[8]));
   VCC  VCC_9 (.P(XLXN_12[9]));
   VCC  VCC_10 (.P(XLXN_12[10]));
   VCC  VCC_11 (.P(XLXN_12[11]));
   VCC  VCC_12 (.P(XLXN_12[12]));
   VCC  VCC_13 (.P(XLXN_12[13]));
   VCC  VCC_14 (.P(XLXN_12[14]));
   VCC  VCC_15 (.P(XLXN_12[15]));
   ALU_main_MUSER_CPU_main  XLXI_1 (.A(XLXN_3[15:0]), 
                                   .ALUC(ALUC_IN[3:0]), 
                                   .B(XLXN_4[15:0]), 
                                   .CY(CY_IN), 
                                   .GND(XLXN_13[15:0]), 
                                   .VCC(XLXN_12[15:0]), 
                                   .CO(CY_OUT), 
                                   .Z(XLXN_1[15:0]));
   Shifter  XLXI_2 (.IN_Z(XLXN_1[15:0]), 
                   .S0(Shifter_Sel[0]), 
                   .S1(Shifter_Sel[1]), 
                   .OUT_C(XLXN_10[15:0]));
   Mux2Bus16  XLXI_13 (.IN_0(XLXN_7[15:0]), 
                      .IN_1(Y_KMx_IN[15:0]), 
                      .S(Y_X_Kmx_Sel), 
                      .Y(XLXN_6[15:0]));
   RAM_main_MUSER_CPU_main  XLXI_27 (.CLK(CLK), 
                                    .GND(XLXN_27[15:0]), 
                                    .MemADDR(DAddr[9:0]), 
                                    .Rd(Rd), 
                                    .Wr(Wr), 
                                    .ToFromW(XLXN_49[15:0]));
   VCC  XLXI_28 (.P(XLXN_31));
   VCC  XLXI_29 (.P(XLXN_32));
   VCC  XLXI_30 (.P(XLXN_33));
   ffd16_w_en_MUSER_CPU_main  XLXI_34 (.CLK(CLK), 
                                      .D(XLXN_10[15:0]), 
                                      .EN(XLXN_33), 
                                      .Q(XLXN_11[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_35 (.CLK(CLK), 
                                      .D(XLXN_6[15:0]), 
                                      .EN(XLXN_31), 
                                      .Q(XLXN_3[15:0]));
   ffd16_w_en_MUSER_CPU_main  XLXI_36 (.CLK(CLK), 
                                      .D(XLXN_5[15:0]), 
                                      .EN(XLXN_32), 
                                      .Q(XLXN_4[15:0]));
   register_bank_easy_MUSER_CPU_main  XLXI_37 (.CLK(CLK), 
                                              .C_SEL(C_SEL_RB[5:0]), 
                                              .FROM_C_LATCH(XLXN_11[15:0]), 
                                              .IN0(), 
                                              .IN1(), 
                                              .LEVEL(LEVEL[2:0]), 
                                              .MR(Wr), 
                                              .MW(Rd), 
                                              .SEL_A(SEL_A_RB[5:0]), 
                                              .SEL_B(SEL_B_RB[5:0]), 
                                              .TO_BUS_A(XLXN_7[15:0]), 
                                              .TO_BUS_B(XLXN_5[15:0]), 
                                              
         .WORKING_REGISTER(W_Block1[15:0]), 
                                              .TO_FROM_W(XLXN_49[15:0]));
endmodule
`timescale 1ns / 1ps

module unionMagica_MUSER_CPU_main(CLK, 
                                  CY, 
                                  HOLD, 
                                  W, 
                                  increment, 
                                  INSTRUCTION, 
                                  INSTRUCTION_EXTENDIDA, 
                                  is_void, 
                                  levels_Out, 
                                  PC);

    input CLK;
    input CY;
    input HOLD;
    input [15:0] W;
   output increment;
   output [13:0] INSTRUCTION;
   output [21:0] INSTRUCTION_EXTENDIDA;
   output is_void;
   output [2:0] levels_Out;
   output [10:0] PC;
   
   wire [10:0] D;
   wire load;
   wire pre_load;
   wire [9:0] S;
   wire [10:0] STACK_IN;
   wire store;
   wire XLXN_75;
   wire XLXN_76;
   wire XLXN_79;
   wire [10:0] XLXN_146;
   wire [21:0] XLXN_156;
   wire is_void_DUMMY;
   wire [13:0] INSTRUCTION_DUMMY;
   wire increment_DUMMY;
   
   assign increment = increment_DUMMY;
   assign INSTRUCTION[13:0] = INSTRUCTION_DUMMY[13:0];
   assign is_void = is_void_DUMMY;
   AND2  XLXI_9 (.I0(CLK), 
                .I1(XLXN_79), 
                .O(increment_DUMMY));
   VCC  XLXI_13 (.P(XLXN_75));
   GND  XLXI_14 (.G(XLXN_76));
   INV  XLXI_18 (.I(HOLD), 
                .O(XLXN_79));
   voider  XLXI_32 (.clk(increment_DUMMY), 
                   .is_load(pre_load), 
                   .is_void(is_void_DUMMY));
   pc_increment_v2_module  XLXI_44 (.D(D[10:0]), 
                                   .increment(increment_DUMMY), 
                                   .is_BSR(store), 
                                   .is_RET(load), 
                                   .load(pre_load), 
                                   .S(S[9:0]), 
                                   .stack_in(STACK_IN[10:0]), 
                                   .Q(XLXN_146[10:0]));
   bloqueSaltos  XLXI_45 (.B(INSTRUCTION_DUMMY[13:0]), 
                         .CY(CY), 
                         .W0to15(W[15:0]), 
                         .D(D[10:0]), 
                         .is_BSR(store), 
                         .is_RET(load), 
                         .pre_load(pre_load), 
                         .S(S[9:0]));
   stack_manager  XLXI_46 (.clk(increment_DUMMY), 
                          .in_val(XLXN_146[10:0]), 
                          .load(load), 
                          .store(store), 
                          .level_out(levels_Out[2:0]), 
                          .out_val(STACK_IN[10:0]));
   rest2  XLXI_47 (.in_val(XLXN_146[10:0]), 
                  .out_val(PC[10:0]));
   RAM_internal  XLXI_50 (.addr(), 
                         .clk(increment_DUMMY), 
                         .data_in(), 
                         .rd_enb(XLXN_75), 
                         .wr_enb(XLXN_76), 
                         .data_out());
   instruction_register_v2  XLXI_52 (.increment(increment_DUMMY), 
                                    .in_ins(XLXN_156[21:0]), 
                                    .is_void(is_void_DUMMY), 
                                    .out_ins(INSTRUCTION_DUMMY[13:0]), 
                                    
         .out_ins_completa(INSTRUCTION_EXTENDIDA[21:0]));
endmodule
`timescale 1ns / 1ps

module MROM_MUSER_CPU_main(Bus_B, 
                           ALUC, 
                           B_Bus, 
                           C_Bus, 
                           KMx, 
                           MEM, 
                           SH, 
                           Ti);

    input [6:0] Bus_B;
   output [3:0] ALUC;
   output [5:0] B_Bus;
   output [5:0] C_Bus;
   output KMx;
   output [1:0] MEM;
   output [1:0] SH;
   output [6:0] Ti;
   
   wire [6:0] Bus_B_DUMMY;
   
   assign Bus_B_DUMMY[6:0] = Bus_B[6:0];
   MicroinstructionROMv2  XLXI_9 (.a(Bus_B_DUMMY[6:0]), 
                                 .spo({ALUC[3:0], SH[1:0], KMx, MEM[1:0], 
         B_Bus[5:0], C_Bus[5:0], Ti[6:0]}));
endmodule
`timescale 1ns / 1ps

module fdce1_MUSER_CPU_main(chipEnable, 
                            clk, 
                            d, 
                            q);

    input chipEnable;
    input clk;
    input d;
   output q;
   
   wire XLXN_1;
   
   (* HU_SET = "XLXI_1_54" *) 
   IFD_HXILINX_CPU_main #( .INIT(1'b0) ) XLXI_1 (.C(XLXN_1), 
                                .D(d), 
                                .Q(q));
   AND2  XLXI_2 (.I0(chipEnable), 
                .I1(clk), 
                .O(XLXN_1));
endmodule
`timescale 1ns / 1ps

module LATCH1_MUSER_CPU_main(CLK, 
                             CLR, 
                             ENABLE, 
                             INPUT, 
                             OUTPUT);

    input CLK;
    input CLR;
    input ENABLE;
    input INPUT;
   output OUTPUT;
   
   
   fdce1_MUSER_CPU_main  XLXI_4 (.chipEnable(ENABLE), 
                                .clk(CLK), 
                                .d(INPUT), 
                                .q(OUTPUT));
endmodule
`timescale 1ns / 1ps

module mux1_MUSER_CPU_main(constante, 
                           hold, 
                           muxin, 
                           muxout);

    input constante;
    input hold;
    input muxin;
   output muxout;
   
   
   MUXCY  XLXI_1 (.CI(constante), 
                 .DI(muxin), 
                 .S(hold), 
                 .O(muxout));
endmodule
`timescale 1ns / 1ps

module mux2_MUSER_CPU_main(const, 
                           hold, 
                           muxin, 
                           muxout);

    input [1:0] const;
    input hold;
    input [1:0] muxin;
   output [1:0] muxout;
   
   
   mux1_MUSER_CPU_main  XLXI_1 (.constante(const[0]), 
                               .hold(hold), 
                               .muxin(muxin[0]), 
                               .muxout(muxout[0]));
   mux1_MUSER_CPU_main  XLXI_2 (.constante(const[1]), 
                               .hold(hold), 
                               .muxin(muxin[1]), 
                               .muxout(muxout[1]));
endmodule
`timescale 1ns / 1ps

module mux4_MUSER_CPU_main(const, 
                           hold, 
                           muxin, 
                           muxout);

    input [3:0] const;
    input hold;
    input [3:0] muxin;
   output [3:0] muxout;
   
   
   mux2_MUSER_CPU_main  XLXI_1 (.const(const[1:0]), 
                               .hold(hold), 
                               .muxin(muxin[1:0]), 
                               .muxout(muxout[1:0]));
   mux2_MUSER_CPU_main  XLXI_2 (.const(const[3:2]), 
                               .hold(hold), 
                               .muxin(muxin[3:2]), 
                               .muxout(muxout[3:2]));
endmodule
`timescale 1ns / 1ps

module mux5_MUSER_CPU_main(const, 
                           hold, 
                           muxin, 
                           muxout);

    input [4:0] const;
    input hold;
    input [4:0] muxin;
   output [4:0] muxout;
   
   
   mux4_MUSER_CPU_main  XLXI_1 (.const(const[3:0]), 
                               .hold(hold), 
                               .muxin(muxin[3:0]), 
                               .muxout(muxout[3:0]));
   mux1_MUSER_CPU_main  XLXI_3 (.constante(const[4]), 
                               .hold(hold), 
                               .muxin(muxin[4]), 
                               .muxout(muxout[4]));
endmodule
`timescale 1ns / 1ps

module mux6_MUSER_CPU_main(const, 
                           hold, 
                           muxin, 
                           muxout);

    input [5:0] const;
    input hold;
    input [5:0] muxin;
   output [5:0] muxout;
   
   
   mux5_MUSER_CPU_main  XLXI_1 (.const(const[4:0]), 
                               .hold(hold), 
                               .muxin(muxin[4:0]), 
                               .muxout(muxout[4:0]));
   mux1_MUSER_CPU_main  XLXI_2 (.constante(const[5]), 
                               .hold(hold), 
                               .muxin(muxin[5]), 
                               .muxout(muxout[5]));
endmodule
`timescale 1ns / 1ps

module mux10_MUSER_CPU_main(const, 
                            muxin, 
                            selector, 
                            muxout);

    input [9:0] const;
    input [9:0] muxin;
    input selector;
   output [9:0] muxout;
   
   
   mux6_MUSER_CPU_main  XLXI_3 (.const(const[5:0]), 
                               .hold(selector), 
                               .muxin(muxin[5:0]), 
                               .muxout(muxout[5:0]));
   mux4_MUSER_CPU_main  XLXI_4 (.const(const[9:6]), 
                               .hold(selector), 
                               .muxin(muxin[9:6]), 
                               .muxout(muxout[9:6]));
endmodule
`timescale 1ns / 1ps

module mux7_MUSER_CPU_main(const, 
                           hold, 
                           muxin, 
                           muxout);

    input [6:0] const;
    input hold;
    input [6:0] muxin;
   output [6:0] muxout;
   
   
   mux6_MUSER_CPU_main  XLXI_1 (.const(const[5:0]), 
                               .hold(hold), 
                               .muxin(muxin[5:0]), 
                               .muxout(muxout[5:0]));
   mux1_MUSER_CPU_main  XLXI_2 (.constante(const[6]), 
                               .hold(hold), 
                               .muxin(muxin[6]), 
                               .muxout(muxout[6]));
endmodule
`timescale 1ns / 1ps

module UC1_MUSER_CPU_main(abusIN, 
                          aluIN, 
                          bbusIN, 
                          cbusIN, 
                          clk, 
                          DAdd, 
                          h, 
                          jump, 
                          kmxIN, 
                          memIN, 
                          shIN, 
                          typeIN, 
                          abusOUTuc1, 
                          aluOUTuc1, 
                          bbusOUTuc1, 
                          cbusOUTuc1, 
                          DAddOUTuc1, 
                          kmxOUTuc1, 
                          memOUTuc1, 
                          shOUTuc1, 
                          typeOUTuc1);

    input [4:0] abusIN;
    input [3:0] aluIN;
    input [5:0] bbusIN;
    input [5:0] cbusIN;
    input clk;
    input [9:0] DAdd;
    input h;
    input jump;
    input kmxIN;
    input [1:0] memIN;
    input [1:0] shIN;
    input [6:0] typeIN;
   output [4:0] abusOUTuc1;
   output [3:0] aluOUTuc1;
   output [5:0] bbusOUTuc1;
   output [5:0] cbusOUTuc1;
   output [9:0] DAddOUTuc1;
   output kmxOUTuc1;
   output [1:0] memOUTuc1;
   output [1:0] shOUTuc1;
   output [6:0] typeOUTuc1;
   
   wire clr;
   wire ena;
   wire hold;
   wire [3:0] XLXN_20;
   wire [1:0] XLXN_23;
   wire XLXN_26;
   wire [1:0] XLXN_29;
   wire [5:0] XLXN_33;
   wire [6:0] XLXN_36;
   wire [5:0] XLXN_39;
   wire [4:0] XLXN_42;
   wire [9:0] XLXN_151;
   wire XLXN_161;
   wire XLXN_162;
   
   assign clr = 0;
   assign ena = 1;
   assign XLXN_20 = 4'h8;
   assign XLXN_23 = 2'b00;
   assign XLXN_26 = 0;
   assign XLXN_29 = 2'b00;
   assign XLXN_33 = 6'b100011;
   assign XLXN_36 = 7'b0000000;
   assign XLXN_39 = 6'b100011;
   assign XLXN_42 = 5'b00000;
   assign XLXN_151 = 10'b0000000000;
   assign XLXN_162 = 1;
   mux4_MUSER_CPU_main  XLXI_1 (.const(XLXN_20[3:0]), 
                               .hold(hold), 
                               .muxin(aluIN[3:0]), 
                               .muxout(aluOUTuc1[3:0]));
   mux2_MUSER_CPU_main  XLXI_2 (.const(XLXN_23[1:0]), 
                               .hold(hold), 
                               .muxin(shIN[1:0]), 
                               .muxout(shOUTuc1[1:0]));
   mux1_MUSER_CPU_main  XLXI_3 (.constante(XLXN_26), 
                               .hold(hold), 
                               .muxin(kmxIN), 
                               .muxout(kmxOUTuc1));
   mux2_MUSER_CPU_main  XLXI_4 (.const(XLXN_29[1:0]), 
                               .hold(hold), 
                               .muxin(memIN[1:0]), 
                               .muxout(memOUTuc1[1:0]));
   mux6_MUSER_CPU_main  XLXI_5 (.const(XLXN_33[5:0]), 
                               .hold(hold), 
                               .muxin(bbusIN[5:0]), 
                               .muxout(bbusOUTuc1[5:0]));
   mux7_MUSER_CPU_main  XLXI_6 (.const(XLXN_36[6:0]), 
                               .hold(hold), 
                               .muxin(typeIN[6:0]), 
                               .muxout(typeOUTuc1[6:0]));
   mux6_MUSER_CPU_main  XLXI_7 (.const(XLXN_39[5:0]), 
                               .hold(hold), 
                               .muxin(cbusIN[5:0]), 
                               .muxout(cbusOUTuc1[5:0]));
   mux5_MUSER_CPU_main  XLXI_8 (.const(XLXN_42[4:0]), 
                               .hold(hold), 
                               .muxin(abusIN[4:0]), 
                               .muxout(abusOUTuc1[4:0]));
   mux10_MUSER_CPU_main  XLXI_63 (.const(XLXN_151[9:0]), 
                                 .muxin(DAdd[9:0]), 
                                 .selector(hold), 
                                 .muxout(DAddOUTuc1[9:0]));
   OR2  XLXI_65 (.I0(jump), 
                .I1(h), 
                .O(XLXN_161));
   LATCH1_MUSER_CPU_main  XLXI_68 (.CLK(clk), 
                                  .CLR(), 
                                  .ENABLE(XLXN_162), 
                                  .INPUT(XLXN_161), 
                                  .OUTPUT(hold));
endmodule
`timescale 1ns / 1ps

module Decode_MUSER_CPU_main(cbusmir, 
                             CLK, 
                             instruction, 
                             CBUS);

    input [5:0] cbusmir;
    input CLK;
    input [13:0] instruction;
   output [5:0] CBUS;
   
   wire selector;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_147;
   
   assign XLXN_147 = 0;
   AND3  XLXI_1 (.I0(XLXN_7), 
                .I1(XLXN_6), 
                .I2(instruction[11]), 
                .O(XLXN_4));
   AND4  XLXI_2 (.I0(XLXN_9), 
                .I1(instruction[12]), 
                .I2(instruction[11]), 
                .I3(XLXN_8), 
                .O(XLXN_5));
   OR2  XLXI_3 (.I0(XLXN_5), 
               .I1(XLXN_4), 
               .O(selector));
   INV  XLXI_6 (.I(instruction[12]), 
               .O(XLXN_6));
   INV  XLXI_7 (.I(instruction[13]), 
               .O(XLXN_7));
   INV  XLXI_8 (.I(instruction[10]), 
               .O(XLXN_8));
   INV  XLXI_9 (.I(instruction[13]), 
               .O(XLXN_9));
   mux1_MUSER_CPU_main  XLXI_30 (.constante(XLXN_147), 
                                .hold(selector), 
                                .muxin(cbusmir[5]), 
                                .muxout(CBUS[5]));
   mux5_MUSER_CPU_main  XLXI_31 (.const(instruction[9:5]), 
                                .hold(selector), 
                                .muxin(cbusmir[4:0]), 
                                .muxout(CBUS[4:0]));
endmodule
`timescale 1ns / 1ps

module COMPARADOR5_MUSER_CPU_main(a, 
                                  b, 
                                  iguales);

    input [4:0] a;
    input [4:0] b;
   output iguales;
   
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_20;
   wire XLXN_23;
   wire XLXN_24;
   
   XOR2  XLXI_1 (.I0(b[0]), 
                .I1(a[0]), 
                .O(XLXN_3));
   XOR2  XLXI_2 (.I0(b[1]), 
                .I1(a[1]), 
                .O(XLXN_4));
   XOR2  XLXI_3 (.I0(b[2]), 
                .I1(a[2]), 
                .O(XLXN_5));
   XOR2  XLXI_4 (.I0(b[3]), 
                .I1(a[3]), 
                .O(XLXN_6));
   INV  XLXI_5 (.I(XLXN_3), 
               .O(XLXN_10));
   INV  XLXI_6 (.I(XLXN_4), 
               .O(XLXN_7));
   INV  XLXI_7 (.I(XLXN_5), 
               .O(XLXN_8));
   INV  XLXI_8 (.I(XLXN_6), 
               .O(XLXN_9));
   AND4  XLXI_9 (.I0(XLXN_9), 
                .I1(XLXN_8), 
                .I2(XLXN_7), 
                .I3(XLXN_10), 
                .O(XLXN_24));
   XOR2  XLXI_10 (.I0(b[4]), 
                 .I1(a[4]), 
                 .O(XLXN_20));
   INV  XLXI_11 (.I(XLXN_20), 
                .O(XLXN_23));
   AND2  XLXI_12 (.I0(XLXN_23), 
                 .I1(XLXN_24), 
                 .O(iguales));
endmodule
`timescale 1ns / 1ps

module UC2_MUSER_CPU_main(DecodeBusA, 
                          DecodeMem, 
                          DecodeType, 
                          ExecuteBusC, 
                          ExecuteType, 
                          OperandBusC, 
                          OperandType, 
                          RetireBusC, 
                          RetireType, 
                          hold);

    input [4:0] DecodeBusA;
    input [1:0] DecodeMem;
    input [6:0] DecodeType;
    input [5:0] ExecuteBusC;
    input [6:0] ExecuteType;
    input [5:0] OperandBusC;
    input [6:0] OperandType;
    input [5:0] RetireBusC;
    input [6:0] RetireType;
   output hold;
   
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_60;
   wire XLXN_76;
   wire XLXN_77;
   wire XLXN_78;
   
   OR2  XLXI_2 (.I0(ExecuteType[5]), 
               .I1(OperandType[5]), 
               .O(XLXN_19));
   AND2  XLXI_3 (.I0(DecodeType[4]), 
                .I1(XLXN_19), 
                .O(XLXN_60));
   AND2  XLXI_4 (.I0(DecodeType[0]), 
                .I1(XLXN_20), 
                .O(XLXN_46));
   AND3  XLXI_5 (.I0(DecodeType[2]), 
                .I1(OperandType[3]), 
                .I2(XLXN_41), 
                .O(XLXN_47));
   AND3  XLXI_6 (.I0(DecodeType[2]), 
                .I1(ExecuteType[3]), 
                .I2(XLXN_42), 
                .O(XLXN_48));
   AND3  XLXI_7 (.I0(DecodeType[2]), 
                .I1(RetireType[3]), 
                .I2(XLXN_43), 
                .O(XLXN_49));
   OR3  XLXI_9 (.I0(RetireType[1]), 
               .I1(ExecuteType[1]), 
               .I2(OperandType[1]), 
               .O(XLXN_20));
   COMPARADOR5_MUSER_CPU_main  XLXI_26 (.a(DecodeBusA[4:0]), 
                                       .b(OperandBusC[4:0]), 
                                       .iguales(XLXN_41));
   COMPARADOR5_MUSER_CPU_main  XLXI_28 (.a(DecodeBusA[4:0]), 
                                       .b(ExecuteBusC[4:0]), 
                                       .iguales(XLXN_42));
   COMPARADOR5_MUSER_CPU_main  XLXI_29 (.a(DecodeBusA[4:0]), 
                                       .b(RetireBusC[4:0]), 
                                       .iguales(XLXN_43));
   (* HU_SET = "XLXI_30_55" *) 
   OR6_HXILINX_CPU_main  XLXI_30 (.I0(XLXN_78), 
                                 .I1(XLXN_49), 
                                 .I2(XLXN_48), 
                                 .I3(XLXN_47), 
                                 .I4(XLXN_46), 
                                 .I5(XLXN_60), 
                                 .O(hold));
   (* HU_SET = "XLXI_41_56" *) 
   OR6_HXILINX_CPU_main  XLXI_41 (.I0(RetireType[1]), 
                                 .I1(RetireType[0]), 
                                 .I2(ExecuteType[1]), 
                                 .I3(ExecuteType[0]), 
                                 .I4(OperandType[1]), 
                                 .I5(OperandType[0]), 
                                 .O(XLXN_76));
   OR2  XLXI_42 (.I0(DecodeMem[1]), 
                .I1(DecodeMem[0]), 
                .O(XLXN_77));
   AND2  XLXI_43 (.I0(XLXN_77), 
                 .I1(XLXN_76), 
                 .O(XLXN_78));
endmodule
`timescale 1ns / 1ps

module LATCH4_MUSER_CPU_main(CLK, 
                             CLR, 
                             ENABLE, 
                             INPUT, 
                             OUTPUT);

    input CLK;
    input CLR;
    input ENABLE;
    input [3:0] INPUT;
   output [3:0] OUTPUT;
   
   
   fdce1_MUSER_CPU_main  XLXI_13 (.chipEnable(ENABLE), 
                                 .clk(CLK), 
                                 .d(INPUT[0]), 
                                 .q(OUTPUT[0]));
   fdce1_MUSER_CPU_main  XLXI_14 (.chipEnable(ENABLE), 
                                 .clk(CLK), 
                                 .d(INPUT[1]), 
                                 .q(OUTPUT[1]));
   fdce1_MUSER_CPU_main  XLXI_15 (.chipEnable(ENABLE), 
                                 .clk(CLK), 
                                 .d(INPUT[2]), 
                                 .q(OUTPUT[2]));
   fdce1_MUSER_CPU_main  XLXI_16 (.chipEnable(ENABLE), 
                                 .clk(CLK), 
                                 .d(INPUT[3]), 
                                 .q(OUTPUT[3]));
endmodule
`timescale 1ns / 1ps

module LATCH5_MUSER_CPU_main(CLK, 
                             CLR, 
                             ENABLE, 
                             INPUT, 
                             OUTPUT);

    input CLK;
    input CLR;
    input ENABLE;
    input [4:0] INPUT;
   output [4:0] OUTPUT;
   
   
   LATCH4_MUSER_CPU_main  XLXI_1 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(INPUT[3:0]), 
                                 .OUTPUT(OUTPUT[3:0]));
   fdce1_MUSER_CPU_main  XLXI_5 (.chipEnable(ENABLE), 
                                .clk(CLK), 
                                .d(INPUT[4]), 
                                .q(OUTPUT[4]));
endmodule
`timescale 1ns / 1ps

module LATCH6_MUSER_CPU_main(CLK, 
                             CLR, 
                             ENABLE, 
                             INPUT, 
                             OUTPUT);

    input CLK;
    input CLR;
    input ENABLE;
    input [5:0] INPUT;
   output [5:0] OUTPUT;
   
   
   LATCH5_MUSER_CPU_main  XLXI_1 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(INPUT[4:0]), 
                                 .OUTPUT(OUTPUT[4:0]));
   fdce1_MUSER_CPU_main  XLXI_4 (.chipEnable(ENABLE), 
                                .clk(CLK), 
                                .d(INPUT[5]), 
                                .q(OUTPUT[5]));
endmodule
`timescale 1ns / 1ps

module LATCH7_MUSER_CPU_main(CLK, 
                             CLR, 
                             ENABLE, 
                             INPUT, 
                             OUTPUT);

    input CLK;
    input CLR;
    input ENABLE;
    input [6:0] INPUT;
   output [6:0] OUTPUT;
   
   
   LATCH6_MUSER_CPU_main  XLXI_1 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(INPUT[5:0]), 
                                 .OUTPUT(OUTPUT[5:0]));
   LATCH1_MUSER_CPU_main  XLXI_2 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(INPUT[6]), 
                                 .OUTPUT(OUTPUT[6]));
endmodule
`timescale 1ns / 1ps

module toRetire_MUSER_CPU_main(cbusIN, 
                               CLK, 
                               CLR, 
                               ENABLE, 
                               typeIN, 
                               cbusOUTret, 
                               typeOUTret);

    input [5:0] cbusIN;
    input CLK;
    input CLR;
    input ENABLE;
    input [6:0] typeIN;
   output [5:0] cbusOUTret;
   output [6:0] typeOUTret;
   
   
   LATCH7_MUSER_CPU_main  XLXI_1 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(typeIN[6:0]), 
                                 .OUTPUT(typeOUTret[6:0]));
   LATCH6_MUSER_CPU_main  XLXI_2 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(cbusIN[5:0]), 
                                 .OUTPUT(cbusOUTret[5:0]));
endmodule
`timescale 1ns / 1ps

module LATCH10_MUSER_CPU_main(CLK, 
                              CLR, 
                              ENABLE, 
                              INPUT, 
                              OUTPUT);

    input CLK;
    input CLR;
    input ENABLE;
    input [9:0] INPUT;
   output [9:0] OUTPUT;
   
   
   LATCH6_MUSER_CPU_main  XLXI_1 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(INPUT[5:0]), 
                                 .OUTPUT(OUTPUT[5:0]));
   LATCH4_MUSER_CPU_main  XLXI_2 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(INPUT[9:6]), 
                                 .OUTPUT(OUTPUT[9:6]));
endmodule
`timescale 1ns / 1ps

module LATCH2_MUSER_CPU_main(CLK, 
                             CLR, 
                             ENABLE, 
                             INPUT, 
                             OUTPUT);

    input CLK;
    input CLR;
    input ENABLE;
    input [1:0] INPUT;
   output [1:0] OUTPUT;
   
   
   LATCH1_MUSER_CPU_main  XLXI_1 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(INPUT[0]), 
                                 .OUTPUT(OUTPUT[0]));
   LATCH1_MUSER_CPU_main  XLXI_2 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(INPUT[1]), 
                                 .OUTPUT(OUTPUT[1]));
endmodule
`timescale 1ns / 1ps

module toOperand_MUSER_CPU_main(abusIN, 
                                aluIN, 
                                bbusIN, 
                                cbusIN, 
                                CLK, 
                                CLR, 
                                DAddIN, 
                                ENABLE, 
                                kmxIN, 
                                memIN, 
                                shIN, 
                                typeIN, 
                                abusOUT, 
                                aluOUT, 
                                bbusOUT, 
                                cbusOUT, 
                                DAddOUT, 
                                kmxOUT, 
                                memOUT, 
                                shOUT, 
                                typeOUT);

    input [4:0] abusIN;
    input [3:0] aluIN;
    input [5:0] bbusIN;
    input [5:0] cbusIN;
    input CLK;
    input CLR;
    input [9:0] DAddIN;
    input ENABLE;
    input kmxIN;
    input [1:0] memIN;
    input [1:0] shIN;
    input [6:0] typeIN;
   output [4:0] abusOUT;
   output [3:0] aluOUT;
   output [5:0] bbusOUT;
   output [5:0] cbusOUT;
   output [9:0] DAddOUT;
   output kmxOUT;
   output [1:0] memOUT;
   output [1:0] shOUT;
   output [6:0] typeOUT;
   
   
   LATCH4_MUSER_CPU_main  ALU (.CLK(CLK), 
                              .CLR(CLR), 
                              .ENABLE(ENABLE), 
                              .INPUT(aluIN[3:0]), 
                              .OUTPUT(aluOUT[3:0]));
   LATCH2_MUSER_CPU_main  XLXI_2 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(shIN[1:0]), 
                                 .OUTPUT(shOUT[1:0]));
   LATCH1_MUSER_CPU_main  XLXI_3 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(kmxIN), 
                                 .OUTPUT(kmxOUT));
   LATCH2_MUSER_CPU_main  XLXI_4 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(memIN[1:0]), 
                                 .OUTPUT(memOUT[1:0]));
   LATCH6_MUSER_CPU_main  XLXI_5 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(bbusIN[5:0]), 
                                 .OUTPUT(bbusOUT[5:0]));
   LATCH7_MUSER_CPU_main  XLXI_6 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(typeIN[6:0]), 
                                 .OUTPUT(typeOUT[6:0]));
   LATCH6_MUSER_CPU_main  XLXI_22 (.CLK(CLK), 
                                  .CLR(CLR), 
                                  .ENABLE(ENABLE), 
                                  .INPUT(cbusIN[5:0]), 
                                  .OUTPUT(cbusOUT[5:0]));
   LATCH5_MUSER_CPU_main  XLXI_23 (.CLK(CLK), 
                                  .CLR(CLR), 
                                  .ENABLE(ENABLE), 
                                  .INPUT(abusIN[4:0]), 
                                  .OUTPUT(abusOUT[4:0]));
   LATCH10_MUSER_CPU_main  XLXI_24 (.CLK(CLK), 
                                   .CLR(CLR), 
                                   .ENABLE(ENABLE), 
                                   .INPUT(DAddIN[9:0]), 
                                   .OUTPUT(DAddOUT[9:0]));
endmodule
`timescale 1ns / 1ps

module toExecute_MUSER_CPU_main(aluIN, 
                                cbusIN, 
                                CLK, 
                                CLR, 
                                ENABLE, 
                                shIN, 
                                typeIN, 
                                aluOUTexec, 
                                cbusOUTexec, 
                                shOUTexec, 
                                typeOUTexec);

    input [3:0] aluIN;
    input [5:0] cbusIN;
    input CLK;
    input CLR;
    input ENABLE;
    input [1:0] shIN;
    input [6:0] typeIN;
   output [3:0] aluOUTexec;
   output [5:0] cbusOUTexec;
   output [1:0] shOUTexec;
   output [6:0] typeOUTexec;
   
   
   LATCH4_MUSER_CPU_main  XLXI_1 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(aluIN[3:0]), 
                                 .OUTPUT(aluOUTexec[3:0]));
   LATCH2_MUSER_CPU_main  XLXI_2 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(shIN[1:0]), 
                                 .OUTPUT(shOUTexec[1:0]));
   LATCH7_MUSER_CPU_main  XLXI_3 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(typeIN[6:0]), 
                                 .OUTPUT(typeOUTexec[6:0]));
   LATCH6_MUSER_CPU_main  XLXI_4 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(cbusIN[5:0]), 
                                 .OUTPUT(cbusOUTexec[5:0]));
endmodule
`timescale 1ns / 1ps

module Tuberia_MUSER_CPU_main(ALU, 
                              BBUS, 
                              cbusrom, 
                              CLK2, 
                              instruction, 
                              JUMP, 
                              KMX, 
                              MEM, 
                              SH, 
                              TYPEIN, 
                              ABUSOUT, 
                              ALUOUT, 
                              BBUSOUT, 
                              CBUSOUT, 
                              DAddOUT, 
                              HOLD, 
                              KMXOUT, 
                              MEMOUT, 
                              SHOUT, 
                              TYPEOUT);

    input [3:0] ALU;
    input [5:0] BBUS;
    input [5:0] cbusrom;
    input CLK2;
    input [13:0] instruction;
    input JUMP;
    input KMX;
    input [1:0] MEM;
    input [1:0] SH;
    input [6:0] TYPEIN;
   output [4:0] ABUSOUT;
   output [3:0] ALUOUT;
   output [5:0] BBUSOUT;
   output [5:0] CBUSOUT;
   output [9:0] DAddOUT;
   output HOLD;
   output KMXOUT;
   output [1:0] MEMOUT;
   output [1:0] SHOUT;
   output [6:0] TYPEOUT;
   
   wire [4:0] ABUSaUC1;
   wire [3:0] ALUaUC1;
   wire [3:0] ALUop;
   wire [5:0] BBUSaUC1;
   wire [5:0] CBUS;
   wire [5:0] CBUSaUC1;
   wire [5:0] CBUSexec;
   wire [5:0] CBUSop;
   wire [9:0] DAddaUC1;
   wire KMXaUC1;
   wire [1:0] MEMaUC1;
   wire [1:0] SHaUC1;
   wire [1:0] SHop;
   wire [6:0] TYPEaUC1;
   wire [6:0] TYPEexec;
   wire [6:0] TYPEop;
   wire XLXN_2;
   wire XLXN_11;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_60;
   wire XLXN_61;
   wire XLXN_77;
   wire XLXN_84;
   wire XLXN_85;
   wire [6:0] TYPEOUT_DUMMY;
   wire [5:0] CBUSOUT_DUMMY;
   wire HOLD_DUMMY;
   
   assign XLXN_11 = 0;
   assign XLXN_49 = 0;
   assign XLXN_50 = 1;
   assign XLXN_60 = 0;
   assign XLXN_61 = 1;
   assign XLXN_84 = 1;
   assign CBUSOUT[5:0] = CBUSOUT_DUMMY[5:0];
   assign HOLD = HOLD_DUMMY;
   assign TYPEOUT[6:0] = TYPEOUT_DUMMY[6:0];
   toExecute_MUSER_CPU_main  XLXI_5 (.aluIN(ALUop[3:0]), 
                                    .cbusIN(CBUSop[5:0]), 
                                    .CLK(CLK2), 
                                    .CLR(XLXN_49), 
                                    .ENABLE(XLXN_50), 
                                    .shIN(SHop[1:0]), 
                                    .typeIN(TYPEop[6:0]), 
                                    .aluOUTexec(ALUOUT[3:0]), 
                                    .cbusOUTexec(CBUSexec[5:0]), 
                                    .shOUTexec(SHOUT[1:0]), 
                                    .typeOUTexec(TYPEexec[6:0]));
   toRetire_MUSER_CPU_main  XLXI_6 (.cbusIN(CBUSexec[5:0]), 
                                   .CLK(CLK2), 
                                   .CLR(XLXN_60), 
                                   .ENABLE(XLXN_61), 
                                   .typeIN(TYPEexec[6:0]), 
                                   .cbusOUTret(CBUSOUT_DUMMY[5:0]), 
                                   .typeOUTret(TYPEOUT_DUMMY[6:0]));
   INV  XLXI_7 (.I(HOLD_DUMMY), 
               .O(XLXN_2));
   toOperand_MUSER_CPU_main  XLXI_14 (.abusIN(instruction[4:0]), 
                                     .aluIN(ALU[3:0]), 
                                     .bbusIN(BBUS[5:0]), 
                                     .cbusIN(CBUS[5:0]), 
                                     .CLK(CLK2), 
                                     .CLR(XLXN_11), 
                                     .DAddIN(instruction[9:0]), 
                                     .ENABLE(XLXN_2), 
                                     .kmxIN(KMX), 
                                     .memIN(MEM[1:0]), 
                                     .shIN(SH[1:0]), 
                                     .typeIN(TYPEIN[6:0]), 
                                     .abusOUT(ABUSaUC1[4:0]), 
                                     .aluOUT(ALUaUC1[3:0]), 
                                     .bbusOUT(BBUSaUC1[5:0]), 
                                     .cbusOUT(CBUSaUC1[5:0]), 
                                     .DAddOUT(DAddaUC1[9:0]), 
                                     .kmxOUT(KMXaUC1), 
                                     .memOUT(MEMaUC1[1:0]), 
                                     .shOUT(SHaUC1[1:0]), 
                                     .typeOUT(TYPEaUC1[6:0]));
   UC2_MUSER_CPU_main  XLXI_17 (.DecodeBusA(instruction[4:0]), 
                               .DecodeMem(MEM[1:0]), 
                               .DecodeType(TYPEIN[6:0]), 
                               .ExecuteBusC(CBUSexec[5:0]), 
                               .ExecuteType(TYPEexec[6:0]), 
                               .OperandBusC(CBUSop[5:0]), 
                               .OperandType(TYPEop[6:0]), 
                               .RetireBusC(CBUSOUT_DUMMY[5:0]), 
                               .RetireType(TYPEOUT_DUMMY[6:0]), 
                               .hold(XLXN_77));
   Decode_MUSER_CPU_main  XLXI_32 (.cbusmir(cbusrom[5:0]), 
                                  .CLK(CLK2), 
                                  .instruction(instruction[13:0]), 
                                  .CBUS(CBUS[5:0]));
   fdce1_MUSER_CPU_main  XLXI_33 (.chipEnable(XLXN_84), 
                                 .clk(XLXN_85), 
                                 .d(XLXN_77), 
                                 .q(HOLD_DUMMY));
   INV  XLXI_35 (.I(CLK2), 
                .O(XLXN_85));
   UC1_MUSER_CPU_main  XLXI_37 (.abusIN(ABUSaUC1[4:0]), 
                               .aluIN(ALUaUC1[3:0]), 
                               .bbusIN(BBUSaUC1[5:0]), 
                               .cbusIN(CBUSaUC1[5:0]), 
                               .clk(CLK2), 
                               .DAdd(DAddaUC1[9:0]), 
                               .h(HOLD_DUMMY), 
                               .jump(JUMP), 
                               .kmxIN(KMXaUC1), 
                               .memIN(MEMaUC1[1:0]), 
                               .shIN(SHaUC1[1:0]), 
                               .typeIN(TYPEaUC1[6:0]), 
                               .abusOUTuc1(ABUSOUT[4:0]), 
                               .aluOUTuc1(ALUop[3:0]), 
                               .bbusOUTuc1(BBUSOUT[5:0]), 
                               .cbusOUTuc1(CBUSop[5:0]), 
                               .DAddOUTuc1(DAddOUT[9:0]), 
                               .kmxOUTuc1(KMXOUT), 
                               .memOUTuc1(MEMOUT[1:0]), 
                               .shOUTuc1(SHop[1:0]), 
                               .typeOUTuc1(TYPEop[6:0]));
endmodule
`timescale 1ns / 1ps

module merge_MUSER_CPU_main(clk, 
                            instruction, 
                            JUMP, 
                            abus_out, 
                            alu_out, 
                            bbus_out, 
                            cbus_out, 
                            DAdd_out, 
                            hold, 
                            kmx_out, 
                            mem_out, 
                            sh_out, 
                            type_out);

    input clk;
    input [13:0] instruction;
    input JUMP;
   output [4:0] abus_out;
   output [3:0] alu_out;
   output [5:0] bbus_out;
   output [5:0] cbus_out;
   output [9:0] DAdd_out;
   output hold;
   output kmx_out;
   output [1:0] mem_out;
   output [1:0] sh_out;
   output [6:0] type_out;
   
   wire [3:0] alu;
   wire [5:0] bbus;
   wire [5:0] cbus;
   wire kmx;
   wire [1:0] mem;
   wire [1:0] sh;
   wire [6:0] Ti;
   
   Tuberia_MUSER_CPU_main  XLXI_2 (.ALU(alu[3:0]), 
                                  .BBUS(bbus[5:0]), 
                                  .cbusrom(cbus[5:0]), 
                                  .CLK2(clk), 
                                  .instruction(instruction[13:0]), 
                                  .JUMP(JUMP), 
                                  .KMX(kmx), 
                                  .MEM(mem[1:0]), 
                                  .SH(sh[1:0]), 
                                  .TYPEIN(Ti[6:0]), 
                                  .ABUSOUT(abus_out[4:0]), 
                                  .ALUOUT(alu_out[3:0]), 
                                  .BBUSOUT(bbus_out[5:0]), 
                                  .CBUSOUT(cbus_out[5:0]), 
                                  .DAddOUT(DAdd_out[9:0]), 
                                  .HOLD(hold), 
                                  .KMXOUT(kmx_out), 
                                  .MEMOUT(mem_out[1:0]), 
                                  .SHOUT(sh_out[1:0]), 
                                  .TYPEOUT(type_out[6:0]));
   MROM_MUSER_CPU_main  XLXI_3 (.Bus_B(instruction[13:7]), 
                               .ALUC(alu[3:0]), 
                               .B_Bus(bbus[5:0]), 
                               .C_Bus(cbus[5:0]), 
                               .KMx(kmx), 
                               .MEM(mem[1:0]), 
                               .SH(sh[1:0]), 
                               .Ti(Ti[6:0]));
endmodule
`timescale 1ns / 1ps

module merge_conIR_MUSER_CPU_main(CLK, 
                                  CY, 
                                  W, 
                                  abus_out, 
                                  alu_out, 
                                  bbus_out, 
                                  cbus_out, 
                                  DAdd_out, 
                                  hold, 
                                  INST_EXTEND, 
                                  kmx_out, 
                                  levels_out, 
                                  mem_out, 
                                  sh_out, 
                                  type_out);

    input CLK;
    input CY;
    input [15:0] W;
   output [4:0] abus_out;
   output [3:0] alu_out;
   output [5:0] bbus_out;
   output [5:0] cbus_out;
   output [9:0] DAdd_out;
   output hold;
   output [21:0] INST_EXTEND;
   output kmx_out;
   output [2:0] levels_out;
   output [1:0] mem_out;
   output [1:0] sh_out;
   output [6:0] type_out;
   
   wire [13:0] XLXN_32;
   wire XLXN_49;
   wire hold_DUMMY;
   
   assign hold = hold_DUMMY;
   merge_MUSER_CPU_main  XLXI_2 (.clk(CLK), 
                                .instruction(XLXN_32[13:0]), 
                                .JUMP(XLXN_49), 
                                .abus_out(abus_out[4:0]), 
                                .alu_out(alu_out[3:0]), 
                                .bbus_out(bbus_out[5:0]), 
                                .cbus_out(cbus_out[5:0]), 
                                .DAdd_out(DAdd_out[9:0]), 
                                .hold(hold_DUMMY), 
                                .kmx_out(kmx_out), 
                                .mem_out(mem_out[1:0]), 
                                .sh_out(sh_out[1:0]), 
                                .type_out(type_out[6:0]));
   unionMagica_MUSER_CPU_main  XLXI_4 (.CLK(CLK), 
                                      .CY(CY), 
                                      .HOLD(hold_DUMMY), 
                                      .W(W[15:0]), 
                                      .increment(), 
                                      .INSTRUCTION(XLXN_32[13:0]), 
                                      
         .INSTRUCTION_EXTENDIDA(INST_EXTEND[21:0]), 
                                      .is_void(XLXN_49), 
                                      .levels_Out(levels_out[2:0]), 
                                      .PC());
endmodule
`timescale 1ns / 1ps

module CPU_main(CLK_CPU);

    input CLK_CPU;
   
   wire [3:0] ALUC_Operation;
   wire [5:0] B_Selector_RB;
   wire CY_Feedback;
   wire [5:0] C_Selector_RB;
   wire [9:0] DAddr_Con;
   wire Hold_NC;
   wire [21:0] Instruction_Extended;
   wire KMx_Selector;
   wire [2:0] Levels_Con;
   wire [1:0] Mem_Control;
   wire [5:0] SelA_Aux;
   wire [1:0] Shifter_Selector;
   wire [6:0] Type_NC;
   wire [15:0] W_Feedback;
   wire XLXN_53;
   
   merge_conIR_MUSER_CPU_main  XLXI_1 (.CLK(CLK_CPU), 
                                      .CY(CY_Feedback), 
                                      .W(W_Feedback[15:0]), 
                                      .abus_out(SelA_Aux[4:0]), 
                                      .alu_out(ALUC_Operation[3:0]), 
                                      .bbus_out(B_Selector_RB[5:0]), 
                                      .cbus_out(C_Selector_RB[5:0]), 
                                      .DAdd_out(DAddr_Con[9:0]), 
                                      .hold(Hold_NC), 
                                      .INST_EXTEND(Instruction_Extended[21:0]), 
                                      .kmx_out(KMx_Selector), 
                                      .levels_out(Levels_Con[2:0]), 
                                      .mem_out(Mem_Control[1:0]), 
                                      .sh_out(Shifter_Selector[1:0]), 
                                      .type_out(Type_NC[6:0]));
   ALU_Reg_Join_MUSER_CPU_main  XLXI_2 (.ALUC_IN(ALUC_Operation[3:0]), 
                                       .CLK(CLK_CPU), 
                                       .CY_IN(CY_Feedback), 
                                       .C_SEL_RB(C_Selector_RB[5:0]), 
                                       .DAddr(DAddr_Con[9:0]), 
                                       .LEVEL(Levels_Con[2:0]), 
                                       .Rd(Mem_Control[1]), 
                                       .SEL_A_RB(SelA_Aux[5:0]), 
                                       .SEL_B_RB(B_Selector_RB[5:0]), 
                                       .Shifter_Sel(Shifter_Selector[1:0]), 
                                       .Wr(Mem_Control[0]), 
                                       .Y_KMx_IN(Instruction_Extended[15:0]), 
                                       .Y_X_Kmx_Sel(KMx_Selector), 
                                       .CY_OUT(XLXN_53), 
                                       .W_Block1(W_Feedback[15:0]));
   GND  XLXI_8 (.G(SelA_Aux[5]));
   CY_Block  XLXI_9 (.ALUC(ALUC_Operation[3:0]), 
                    .CLK_CY(CLK_CPU), 
                    .CY_out(XLXN_53), 
                    .CY(CY_Feedback));
endmodule
