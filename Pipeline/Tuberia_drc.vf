////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Tuberia_drc.vf
// /___/   /\     Timestamp : 05/31/2020 22:23:56
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx\14.7\ISE_DS\ISE\bin\nt64\unwrapped\sch2hdl.exe -intstyle ise -family artix7 -verilog Tuberia_drc.vf -w C:/Users/Martina/Desktop/EV-20-Grupo2/Pipeline/Tuberia.sch
//Design Name: Tuberia
//Device: artix7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module COMP4_HXILINX_Tuberia (EQ, A0, A1, A2, A3, B0, B1, B2, B3);
    

   output EQ;

   input A0;
   input A1;
   input A2;
   input A3;
   input B0;
   input B1;
   input B2;
   input B3;

   assign EQ = ((A0==B0) && (A1==B1) && (A2==B2) && (A3==B3)) ;

endmodule
`timescale 1ns / 1ps

module LATCH4_MUSER_Tuberia(CLK, 
                            CLR, 
                            ENABLE, 
                            INPUT, 
                            OUTPUT);

    input CLK;
    input CLR;
    input ENABLE;
    input [3:0] INPUT;
   output [3:0] OUTPUT;
   
   
   LDCE #( .INIT(1'b0) ) XLXI_4 (.CLR(CLR), 
                .D(INPUT[2]), 
                .G(CLK), 
                .GE(ENABLE), 
                .Q(OUTPUT[2]));
   LDCE #( .INIT(1'b0) ) XLXI_5 (.CLR(CLR), 
                .D(INPUT[3]), 
                .G(CLK), 
                .GE(ENABLE), 
                .Q(OUTPUT[3]));
   LDCE #( .INIT(1'b0) ) XLXI_6 (.CLR(CLR), 
                .D(INPUT[1]), 
                .G(CLK), 
                .GE(ENABLE), 
                .Q(OUTPUT[1]));
   LDCE #( .INIT(1'b0) ) XLXI_7 (.CLR(CLR), 
                .D(INPUT[0]), 
                .G(CLK), 
                .GE(ENABLE), 
                .Q(OUTPUT[0]));
endmodule
`timescale 1ns / 1ps

module LATCH5_MUSER_Tuberia(CLK, 
                            CLR, 
                            ENABLE, 
                            INPUT, 
                            OUTPUT);

    input CLK;
    input CLR;
    input ENABLE;
    input [4:0] INPUT;
   output [4:0] OUTPUT;
   
   
   LATCH4_MUSER_Tuberia  XLXI_1 (.CLK(CLK), 
                                .CLR(CLR), 
                                .ENABLE(ENABLE), 
                                .INPUT(INPUT[3:0]), 
                                .OUTPUT(OUTPUT[3:0]));
   LDCE #( .INIT(1'b0) ) XLXI_2 (.CLR(CLR), 
                .D(INPUT[4]), 
                .G(CLK), 
                .GE(ENABLE), 
                .Q(OUTPUT[4]));
endmodule
`timescale 1ns / 1ps

module LATCH6_MUSER_Tuberia(CLK, 
                            CLR, 
                            ENABLE, 
                            INPUT, 
                            OUTPUT);

    input CLK;
    input CLR;
    input ENABLE;
    input [5:0] INPUT;
   output [5:0] OUTPUT;
   
   
   LATCH5_MUSER_Tuberia  XLXI_1 (.CLK(CLK), 
                                .CLR(CLR), 
                                .ENABLE(ENABLE), 
                                .INPUT(INPUT[4:0]), 
                                .OUTPUT(OUTPUT[4:0]));
   LDCE #( .INIT(1'b0) ) XLXI_2 (.CLR(CLR), 
                .D(INPUT[5]), 
                .G(CLK), 
                .GE(ENABLE), 
                .Q(OUTPUT[5]));
endmodule
`timescale 1ns / 1ps

module LATCH1_MUSER_Tuberia(CLK, 
                            CLR, 
                            ENABLE, 
                            INPUT, 
                            OUTPUT);

    input CLK;
    input CLR;
    input ENABLE;
    input INPUT;
   output OUTPUT;
   
   
   LDCE #( .INIT(1'b0) ) XLXI_1 (.CLR(CLR), 
                .D(INPUT), 
                .G(CLK), 
                .GE(ENABLE), 
                .Q());
endmodule
`timescale 1ns / 1ps

module LATCH7_MUSER_Tuberia(CLK, 
                            CLR, 
                            ENABLE, 
                            INPUT, 
                            OUTPUT);

    input CLK;
    input CLR;
    input ENABLE;
    input [6:0] INPUT;
   output [6:0] OUTPUT;
   
   wire XLXN_3;
   
   LATCH6_MUSER_Tuberia  XLXI_1 (.CLK(CLK), 
                                .CLR(CLR), 
                                .ENABLE(XLXN_3), 
                                .INPUT(INPUT[5:0]), 
                                .OUTPUT(OUTPUT[5:0]));
   LATCH1_MUSER_Tuberia  XLXI_2 (.CLK(CLK), 
                                .CLR(CLR), 
                                .ENABLE(ENABLE), 
                                .INPUT(INPUT[6]), 
                                .OUTPUT(OUTPUT[6]));
endmodule
`timescale 1ns / 1ps

module LATCH2_MUSER_Tuberia(CLK, 
                            CLR, 
                            ENABLE, 
                            INPUT, 
                            OUTPUT);

    input CLK;
    input CLR;
    input ENABLE;
    input [1:0] INPUT;
   output [1:0] OUTPUT;
   
   
   LATCH1_MUSER_Tuberia  XLXI_1 (.CLK(CLK), 
                                .CLR(CLR), 
                                .ENABLE(ENABLE), 
                                .INPUT(INPUT[0]), 
                                .OUTPUT(OUTPUT[0]));
   LATCH1_MUSER_Tuberia  XLXI_2 (.CLK(CLK), 
                                .CLR(CLR), 
                                .ENABLE(ENABLE), 
                                .INPUT(INPUT[1]), 
                                .OUTPUT(OUTPUT[1]));
endmodule
`timescale 1ns / 1ps

module toExecute_MUSER_Tuberia(aluIN, 
                               cbusIN, 
                               CLK, 
                               CLR, 
                               ENABLE, 
                               shIN, 
                               typeIN, 
                               aluOUTexec, 
                               cbusOUTexec, 
                               shOUTexec, 
                               typeOUTexec);

    input [3:0] aluIN;
    input [5:0] cbusIN;
    input CLK;
    input CLR;
    input ENABLE;
    input [1:0] shIN;
    input [6:0] typeIN;
   output [3:0] aluOUTexec;
   output [5:0] cbusOUTexec;
   output [1:0] shOUTexec;
   output [6:0] typeOUTexec;
   
   
   LATCH4_MUSER_Tuberia  XLXI_1 (.CLK(CLK), 
                                .CLR(CLR), 
                                .ENABLE(ENABLE), 
                                .INPUT(aluIN[3:0]), 
                                .OUTPUT(aluOUTexec[3:0]));
   LATCH2_MUSER_Tuberia  XLXI_2 (.CLK(CLK), 
                                .CLR(CLR), 
                                .ENABLE(ENABLE), 
                                .INPUT(shIN[1:0]), 
                                .OUTPUT(shOUTexec[1:0]));
   LATCH7_MUSER_Tuberia  XLXI_3 (.CLK(CLK), 
                                .CLR(CLR), 
                                .ENABLE(ENABLE), 
                                .INPUT(typeIN[6:0]), 
                                .OUTPUT(typeOUTexec[6:0]));
   LATCH6_MUSER_Tuberia  XLXI_4 (.CLK(CLK), 
                                .CLR(CLR), 
                                .ENABLE(ENABLE), 
                                .INPUT(cbusIN[5:0]), 
                                .OUTPUT(cbusOUTexec[5:0]));
endmodule
`timescale 1ns / 1ps

module mux1_MUSER_Tuberia(constante, 
                          hold, 
                          muxin, 
                          muxout);

    input constante;
    input hold;
    input muxin;
   output muxout;
   
   
   MUXCY  XLXI_1 (.CI(constante), 
                 .DI(muxin), 
                 .S(hold), 
                 .O(muxout));
endmodule
`timescale 1ns / 1ps

module mux2_MUSER_Tuberia(const, 
                          hold, 
                          muxin, 
                          muxout);

    input [1:0] const;
    input hold;
    input [1:0] muxin;
   output [1:0] muxout;
   
   
   mux1_MUSER_Tuberia  XLXI_1 (.constante(const[0]), 
                              .hold(hold), 
                              .muxin(muxin[0]), 
                              .muxout(muxout[0]));
   mux1_MUSER_Tuberia  XLXI_2 (.constante(const[1]), 
                              .hold(hold), 
                              .muxin(muxin[1]), 
                              .muxout(muxout[1]));
endmodule
`timescale 1ns / 1ps

module mux4_MUSER_Tuberia(const, 
                          hold, 
                          muxin, 
                          muxout);

    input [3:0] const;
    input hold;
    input [3:0] muxin;
   output [3:0] muxout;
   
   
   mux2_MUSER_Tuberia  XLXI_1 (.const(const[1:0]), 
                              .hold(hold), 
                              .muxin(muxin[1:0]), 
                              .muxout(muxout[1:0]));
   mux2_MUSER_Tuberia  XLXI_2 (.const(const[3:2]), 
                              .hold(hold), 
                              .muxin(muxin[3:2]), 
                              .muxout(muxout[3:2]));
endmodule
`timescale 1ns / 1ps

module mux5_MUSER_Tuberia(const, 
                          hold, 
                          muxin, 
                          muxout);

    input [4:0] const;
    input hold;
    input [4:0] muxin;
   output [4:0] muxout;
   
   
   mux4_MUSER_Tuberia  XLXI_1 (.const(const[3:0]), 
                              .hold(hold), 
                              .muxin(muxin[3:0]), 
                              .muxout(muxout[3:0]));
   mux1_MUSER_Tuberia  XLXI_3 (.constante(const[4]), 
                              .hold(hold), 
                              .muxin(muxin[4]), 
                              .muxout(muxout[4]));
endmodule
`timescale 1ns / 1ps

module mux6_MUSER_Tuberia(const, 
                          hold, 
                          muxin, 
                          muxout);

    input [5:0] const;
    input hold;
    input [5:0] muxin;
   output [5:0] muxout;
   
   
   mux5_MUSER_Tuberia  XLXI_1 (.const(const[4:0]), 
                              .hold(hold), 
                              .muxin(muxin[4:0]), 
                              .muxout(muxout[4:0]));
   mux1_MUSER_Tuberia  XLXI_2 (.constante(const[5]), 
                              .hold(hold), 
                              .muxin(muxin[5]), 
                              .muxout(muxout[5]));
endmodule
`timescale 1ns / 1ps

module mux7_MUSER_Tuberia(const, 
                          hold, 
                          muxin, 
                          muxout);

    input [6:0] const;
    input hold;
    input [6:0] muxin;
   output [6:0] muxout;
   
   
   mux6_MUSER_Tuberia  XLXI_1 (.const(const[5:0]), 
                              .hold(hold), 
                              .muxin(muxin[5:0]), 
                              .muxout(muxout[5:0]));
   mux1_MUSER_Tuberia  XLXI_2 (.constante(const[6]), 
                              .hold(hold), 
                              .muxin(muxin[6]), 
                              .muxout(muxout[6]));
endmodule
`timescale 1ns / 1ps

module UC1_MUSER_Tuberia(abusIN, 
                         aluIN, 
                         bbusIN, 
                         cbusIN, 
                         hold, 
                         kmxIN, 
                         memIN, 
                         shIN, 
                         typeIN, 
                         abusOUTuc1, 
                         aluOUTuc1, 
                         bbusOUTuc1, 
                         cbusOUTuc1, 
                         kmxOUTuc1, 
                         memOUTuc1, 
                         shOUTuc1, 
                         typeOUTuc1);

    input [4:0] abusIN;
    input [3:0] aluIN;
    input [5:0] bbusIN;
    input [5:0] cbusIN;
    input hold;
    input kmxIN;
    input [1:0] memIN;
    input [1:0] shIN;
    input [6:0] typeIN;
   output [4:0] abusOUTuc1;
   output [3:0] aluOUTuc1;
   output [5:0] bbusOUTuc1;
   output [5:0] cbusOUTuc1;
   output kmxOUTuc1;
   output [1:0] memOUTuc1;
   output [1:0] shOUTuc1;
   output [6:0] typeOUTuc1;
   
   wire [3:0] XLXN_20;
   wire [1:0] XLXN_23;
   wire XLXN_26;
   wire [1:0] XLXN_29;
   wire [5:0] XLXN_33;
   wire [6:0] XLXN_36;
   wire [5:0] XLXN_39;
   wire [4:0] XLXN_42;
   
   assign XLXN_20 = 4'h8;
   assign XLXN_23 = 2'b00;
   assign XLXN_26 = 0;
   assign XLXN_29 = 2'b00;
   assign XLXN_33 = 6'b100011;
   assign XLXN_36 = 7'b0000000;
   assign XLXN_39 = 6'b100011;
   assign XLXN_42 = 5'b00000;
   mux4_MUSER_Tuberia  XLXI_1 (.const(XLXN_20[3:0]), 
                              .hold(hold), 
                              .muxin(aluIN[3:0]), 
                              .muxout(aluOUTuc1[3:0]));
   mux2_MUSER_Tuberia  XLXI_2 (.const(XLXN_23[1:0]), 
                              .hold(hold), 
                              .muxin(shIN[1:0]), 
                              .muxout(shOUTuc1[1:0]));
   mux1_MUSER_Tuberia  XLXI_3 (.constante(XLXN_26), 
                              .hold(hold), 
                              .muxin(kmxIN), 
                              .muxout(kmxOUTuc1));
   mux2_MUSER_Tuberia  XLXI_4 (.const(XLXN_29[1:0]), 
                              .hold(hold), 
                              .muxin(memIN[1:0]), 
                              .muxout(memOUTuc1[1:0]));
   mux6_MUSER_Tuberia  XLXI_5 (.const(XLXN_33[5:0]), 
                              .hold(hold), 
                              .muxin(bbusIN[5:0]), 
                              .muxout(bbusOUTuc1[5:0]));
   mux7_MUSER_Tuberia  XLXI_6 (.const(XLXN_36[6:0]), 
                              .hold(hold), 
                              .muxin(typeIN[6:0]), 
                              .muxout(typeOUTuc1[6:0]));
   mux6_MUSER_Tuberia  XLXI_7 (.const(XLXN_39[5:0]), 
                              .hold(hold), 
                              .muxin(cbusIN[5:0]), 
                              .muxout(cbusOUTuc1[5:0]));
   mux5_MUSER_Tuberia  XLXI_8 (.const(XLXN_42[4:0]), 
                              .hold(hold), 
                              .muxin(abusIN[4:0]), 
                              .muxout(abusOUTuc1[4:0]));
endmodule
`timescale 1ns / 1ps

module toRetire_MUSER_Tuberia(cbusIN, 
                              CLK, 
                              CLR, 
                              ENABLE, 
                              typeIN, 
                              cbusOUTret, 
                              typeOUTret);

    input [5:0] cbusIN;
    input CLK;
    input CLR;
    input ENABLE;
    input [6:0] typeIN;
   output [5:0] cbusOUTret;
   output [6:0] typeOUTret;
   
   
   LATCH7_MUSER_Tuberia  XLXI_1 (.CLK(CLK), 
                                .CLR(CLR), 
                                .ENABLE(ENABLE), 
                                .INPUT(typeIN[6:0]), 
                                .OUTPUT(typeOUTret[6:0]));
   LATCH6_MUSER_Tuberia  XLXI_2 (.CLK(CLK), 
                                .CLR(CLR), 
                                .ENABLE(ENABLE), 
                                .INPUT(cbusIN[5:0]), 
                                .OUTPUT(cbusOUTret[5:0]));
endmodule
`timescale 1ns / 1ps

module LATCH10_MUSER_Tuberia(CLK, 
                             CLR, 
                             ENABLE, 
                             INPUT, 
                             OUTPUT);

    input CLK;
    input CLR;
    input ENABLE;
    input [9:0] INPUT;
   output [9:0] OUTPUT;
   
   
   LATCH6_MUSER_Tuberia  XLXI_1 (.CLK(CLK), 
                                .CLR(CLR), 
                                .ENABLE(ENABLE), 
                                .INPUT(INPUT[5:0]), 
                                .OUTPUT(OUTPUT[5:0]));
   LATCH4_MUSER_Tuberia  XLXI_2 (.CLK(CLK), 
                                .CLR(CLR), 
                                .ENABLE(ENABLE), 
                                .INPUT(INPUT[9:6]), 
                                .OUTPUT(OUTPUT[9:6]));
endmodule
`timescale 1ns / 1ps

module toOperand_MUSER_Tuberia(abusIN, 
                               aluIN, 
                               bbusIN, 
                               cbusIN, 
                               CLK, 
                               CLR, 
                               DAddIN, 
                               ENABLE, 
                               kmxIN, 
                               memIN, 
                               shIN, 
                               typeIN, 
                               abusOUT, 
                               aluOUT, 
                               bbusOUT, 
                               cbus, 
                               DAddOUT, 
                               kmxOUT, 
                               memOUT, 
                               shOUT, 
                               typeOUT);

    input [4:0] abusIN;
    input [3:0] aluIN;
    input [5:0] bbusIN;
    input [5:0] cbusIN;
    input CLK;
    input CLR;
    input [9:0] DAddIN;
    input ENABLE;
    input kmxIN;
    input [1:0] memIN;
    input [1:0] shIN;
    input [6:0] typeIN;
   output [4:0] abusOUT;
   output [3:0] aluOUT;
   output [5:0] bbusOUT;
   output [5:0] cbus;
   output [9:0] DAddOUT;
   output kmxOUT;
   output [1:0] memOUT;
   output [1:0] shOUT;
   output [6:0] typeOUT;
   
   wire [5:0] cbusOUT;
   
   LATCH4_MUSER_Tuberia  ALU (.CLK(CLK), 
                             .CLR(CLR), 
                             .ENABLE(ENABLE), 
                             .INPUT(aluIN[3:0]), 
                             .OUTPUT(aluOUT[3:0]));
   LATCH2_MUSER_Tuberia  XLXI_2 (.CLK(CLK), 
                                .CLR(CLR), 
                                .ENABLE(ENABLE), 
                                .INPUT(shIN[1:0]), 
                                .OUTPUT(shOUT[1:0]));
   LATCH1_MUSER_Tuberia  XLXI_3 (.CLK(CLK), 
                                .CLR(CLR), 
                                .ENABLE(ENABLE), 
                                .INPUT(kmxIN), 
                                .OUTPUT(kmxOUT));
   LATCH2_MUSER_Tuberia  XLXI_4 (.CLK(CLK), 
                                .CLR(CLR), 
                                .ENABLE(ENABLE), 
                                .INPUT(memIN[1:0]), 
                                .OUTPUT(memOUT[1:0]));
   LATCH6_MUSER_Tuberia  XLXI_5 (.CLK(CLK), 
                                .CLR(CLR), 
                                .ENABLE(ENABLE), 
                                .INPUT(bbusIN[5:0]), 
                                .OUTPUT(bbusOUT[5:0]));
   LATCH7_MUSER_Tuberia  XLXI_6 (.CLK(CLK), 
                                .CLR(CLR), 
                                .ENABLE(ENABLE), 
                                .INPUT(typeIN[6:0]), 
                                .OUTPUT(typeOUT[6:0]));
   LATCH6_MUSER_Tuberia  XLXI_22 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(cbusIN[5:0]), 
                                 .OUTPUT(cbusOUT[5:0]));
   LATCH5_MUSER_Tuberia  XLXI_23 (.CLK(CLK), 
                                 .CLR(CLR), 
                                 .ENABLE(ENABLE), 
                                 .INPUT(abusIN[4:0]), 
                                 .OUTPUT(abusOUT[4:0]));
   LATCH10_MUSER_Tuberia  XLXI_24 (.CLK(CLK), 
                                  .CLR(CLR), 
                                  .ENABLE(ENABLE), 
                                  .INPUT(DAddIN[9:0]), 
                                  .OUTPUT(DAddOUT[9:0]));
endmodule
`timescale 1ns / 1ps

module COMP5_MUSER_Tuberia(A, 
                           B, 
                           equal);

    input [4:0] A;
    input [4:0] B;
   output equal;
   
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   
   (* HU_SET = "XLXI_1_0" *) 
   COMP4_HXILINX_Tuberia  XLXI_1 (.A0(A[0]), 
                                 .A1(A[1]), 
                                 .A2(A[2]), 
                                 .A3(A[3]), 
                                 .B0(B[0]), 
                                 .B1(B[1]), 
                                 .B2(B[2]), 
                                 .B3(B[3]), 
                                 .EQ(XLXN_15));
   XOR2  XLXI_2 (.I0(B[4]), 
                .I1(A[4]), 
                .O(XLXN_13));
   INV  XLXI_3 (.I(XLXN_13), 
               .O(XLXN_14));
   AND2  XLXI_4 (.I0(XLXN_14), 
                .I1(XLXN_15), 
                .O(equal));
endmodule
`timescale 1ns / 1ps

module UC2_MUSER_Tuberia(DecodeBusA, 
                         DecodeType, 
                         ExecuteBusC, 
                         ExecuteType, 
                         OperandBusC, 
                         OperandType, 
                         RetireBusC, 
                         RetireType, 
                         hold);

    input [4:0] DecodeBusA;
    input [6:0] DecodeType;
    input [5:0] ExecuteBusC;
    input [6:0] ExecuteType;
    input [5:0] OperandBusC;
    input [6:0] OperandType;
    input [5:0] RetireBusC;
    input [6:0] RetireType;
   output hold;
   
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   
   OR2  XLXI_2 (.I0(ExecuteType[5]), 
               .I1(OperandType[5]), 
               .O(XLXN_19));
   AND2  XLXI_3 (.I0(DecodeType[4]), 
                .I1(XLXN_19), 
                .O(XLXN_28));
   AND2  XLXI_4 (.I0(DecodeType[0]), 
                .I1(XLXN_20), 
                .O(XLXN_29));
   AND3  XLXI_5 (.I0(DecodeType[2]), 
                .I1(OperandType[3]), 
                .I2(XLXN_41), 
                .O(XLXN_30));
   AND3  XLXI_6 (.I0(DecodeType[2]), 
                .I1(ExecuteType[3]), 
                .I2(XLXN_42), 
                .O(XLXN_31));
   AND3  XLXI_7 (.I0(DecodeType[2]), 
                .I1(RetireType[3]), 
                .I2(XLXN_43), 
                .O(XLXN_32));
   OR5  XLXI_8 (.I0(XLXN_32), 
               .I1(XLXN_31), 
               .I2(XLXN_30), 
               .I3(XLXN_29), 
               .I4(XLXN_28), 
               .O(hold));
   OR3  XLXI_9 (.I0(RetireType[1]), 
               .I1(ExecuteType[1]), 
               .I2(OperandType[1]), 
               .O(XLXN_20));
   COMP5_MUSER_Tuberia  XLXI_23 (.A(DecodeBusA[4:0]), 
                                .B(OperandBusC[4:0]), 
                                .equal(XLXN_41));
   COMP5_MUSER_Tuberia  XLXI_24 (.A(DecodeBusA[4:0]), 
                                .B(ExecuteBusC[4:0]), 
                                .equal(XLXN_42));
   COMP5_MUSER_Tuberia  XLXI_25 (.A(DecodeBusA[4:0]), 
                                .B(RetireBusC[4:0]), 
                                .equal(XLXN_43));
endmodule
`timescale 1ns / 1ps

module Tuberia(ABUS, 
               ALU, 
               BBUS, 
               CBUS, 
               CLK2, 
               CLK3, 
               CLK4, 
               DAdd, 
               KMX, 
               MEM, 
               SH, 
               TYPEIN, 
               ABUSOUT, 
               ALUOUT, 
               BBUSOUT, 
               CBUSOUT, 
               DAddOUT, 
               KMXOUT, 
               MEMOUT, 
               SHOUT, 
               TYPEOUT);

    input [4:0] ABUS;
    input [3:0] ALU;
    input [5:0] BBUS;
    input [5:0] CBUS;
    input CLK2;
    input CLK3;
    input CLK4;
    input [9:0] DAdd;
    input KMX;
    input [1:0] MEM;
    input [1:0] SH;
    input [6:0] TYPEIN;
   output [4:0] ABUSOUT;
   output [3:0] ALUOUT;
   output [5:0] BBUSOUT;
   output [5:0] CBUSOUT;
   output [9:0] DAddOUT;
   output KMXOUT;
   output [1:0] MEMOUT;
   output [1:0] SHOUT;
   output [6:0] TYPEOUT;
   
   wire [4:0] ABUSaUC1;
   wire [3:0] ALUaUC1;
   wire [3:0] ALUop;
   wire [5:0] BBUSaUC1;
   wire [5:0] CBUSaUC1;
   wire [5:0] CBUSexec;
   wire [5:0] CBUSop;
   wire HOLD;
   wire KMXaUC1;
   wire [1:0] MEMaUC1;
   wire [1:0] SHaUC1;
   wire [1:0] SHop;
   wire [6:0] TYPEaUC1;
   wire [6:0] TYPEexec;
   wire [6:0] TYPEop;
   wire XLXN_2;
   wire XLXN_11;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_60;
   wire XLXN_61;
   wire [6:0] TYPEOUT_DUMMY;
   wire [5:0] CBUSOUT_DUMMY;
   
   assign XLXN_11 = 0;
   assign XLXN_49 = 0;
   assign XLXN_50 = 1;
   assign XLXN_60 = 0;
   assign XLXN_61 = 1;
   assign CBUSOUT[5:0] = CBUSOUT_DUMMY[5:0];
   assign TYPEOUT[6:0] = TYPEOUT_DUMMY[6:0];
   UC2_MUSER_Tuberia  XLXI_2 (.DecodeBusA(ABUS[4:0]), 
                             .DecodeType(TYPEIN[6:0]), 
                             .ExecuteBusC(CBUSexec[5:0]), 
                             .ExecuteType(TYPEexec[6:0]), 
                             .OperandBusC(CBUSop[5:0]), 
                             .OperandType(TYPEop[6:0]), 
                             .RetireBusC(CBUSOUT_DUMMY[5:0]), 
                             .RetireType(TYPEOUT_DUMMY[6:0]), 
                             .hold(HOLD));
   toOperand_MUSER_Tuberia  XLXI_3 (.abusIN(ABUS[4:0]), 
                                   .aluIN(ALU[3:0]), 
                                   .bbusIN(BBUS[5:0]), 
                                   .cbusIN(CBUS[5:0]), 
                                   .CLK(CLK2), 
                                   .CLR(XLXN_11), 
                                   .DAddIN(DAdd[9:0]), 
                                   .ENABLE(XLXN_2), 
                                   .kmxIN(KMX), 
                                   .memIN(MEM[1:0]), 
                                   .shIN(SH[1:0]), 
                                   .typeIN(TYPEIN[6:0]), 
                                   .abusOUT(ABUSaUC1[4:0]), 
                                   .aluOUT(ALUaUC1[3:0]), 
                                   .bbusOUT(BBUSaUC1[5:0]), 
                                   .cbus(CBUSaUC1[5:0]), 
                                   .DAddOUT(DAddOUT[9:0]), 
                                   .kmxOUT(KMXaUC1), 
                                   .memOUT(MEMaUC1[1:0]), 
                                   .shOUT(SHaUC1[1:0]), 
                                   .typeOUT(TYPEaUC1[6:0]));
   UC1_MUSER_Tuberia  XLXI_4 (.abusIN(ABUSaUC1[4:0]), 
                             .aluIN(ALUaUC1[3:0]), 
                             .bbusIN(BBUSaUC1[5:0]), 
                             .cbusIN(CBUSaUC1[5:0]), 
                             .hold(HOLD), 
                             .kmxIN(KMXaUC1), 
                             .memIN(MEMaUC1[1:0]), 
                             .shIN(SHaUC1[1:0]), 
                             .typeIN(TYPEaUC1[6:0]), 
                             .abusOUTuc1(ABUSOUT[4:0]), 
                             .aluOUTuc1(ALUop[3:0]), 
                             .bbusOUTuc1(BBUSOUT[5:0]), 
                             .cbusOUTuc1(CBUSop[5:0]), 
                             .kmxOUTuc1(KMXOUT), 
                             .memOUTuc1(MEMOUT[1:0]), 
                             .shOUTuc1(SHop[1:0]), 
                             .typeOUTuc1(TYPEop[6:0]));
   toExecute_MUSER_Tuberia  XLXI_5 (.aluIN(ALUop[3:0]), 
                                   .cbusIN(CBUSop[5:0]), 
                                   .CLK(CLK3), 
                                   .CLR(XLXN_49), 
                                   .ENABLE(XLXN_50), 
                                   .shIN(SHop[1:0]), 
                                   .typeIN(TYPEop[6:0]), 
                                   .aluOUTexec(ALUOUT[3:0]), 
                                   .cbusOUTexec(CBUSexec[5:0]), 
                                   .shOUTexec(SHOUT[1:0]), 
                                   .typeOUTexec(TYPEexec[6:0]));
   toRetire_MUSER_Tuberia  XLXI_6 (.cbusIN(CBUSexec[5:0]), 
                                  .CLK(CLK4), 
                                  .CLR(XLXN_60), 
                                  .ENABLE(XLXN_61), 
                                  .typeIN(TYPEexec[6:0]), 
                                  .cbusOUTret(CBUSOUT_DUMMY[5:0]), 
                                  .typeOUTret(TYPEOUT_DUMMY[6:0]));
   INV  XLXI_7 (.I(HOLD), 
               .O(XLXN_2));
endmodule
