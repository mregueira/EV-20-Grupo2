////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : UC2_drc.vf
// /___/   /\     Timestamp : 05/30/2020 18:26:03
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx\14.7\ISE_DS\ISE\bin\nt64\unwrapped\sch2hdl.exe -intstyle ise -family artix7 -verilog UC2_drc.vf -w C:/Users/Martina/Desktop/EV-20-Grupo2/Pipeline/UC2.sch
//Design Name: UC2
//Device: artix7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module COMP4_HXILINX_UC2 (EQ, A0, A1, A2, A3, B0, B1, B2, B3);
    

   output EQ;

   input A0;
   input A1;
   input A2;
   input A3;
   input B0;
   input B1;
   input B2;
   input B3;

   assign EQ = ((A0==B0) && (A1==B1) && (A2==B2) && (A3==B3)) ;

endmodule
`timescale 1ns / 1ps

module COMP5_MUSER_UC2(A, 
                       B, 
                       equal);

    input [4:0] A;
    input [4:0] B;
   output equal;
   
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   
   (* HU_SET = "XLXI_1_0" *) 
   COMP4_HXILINX_UC2  XLXI_1 (.A0(A[0]), 
                             .A1(A[1]), 
                             .A2(A[2]), 
                             .A3(A[3]), 
                             .B0(B[0]), 
                             .B1(B[1]), 
                             .B2(B[2]), 
                             .B3(B[3]), 
                             .EQ(XLXN_15));
   XOR2  XLXI_2 (.I0(B[4]), 
                .I1(A[4]), 
                .O(XLXN_13));
   INV  XLXI_3 (.I(XLXN_13), 
               .O(XLXN_14));
   AND2  XLXI_4 (.I0(XLXN_14), 
                .I1(XLXN_15), 
                .O(equal));
endmodule
`timescale 1ns / 1ps

module UC2(DecodeBusA, 
           DecodeType, 
           ExecuteBusC, 
           ExecuteType, 
           OperandBusC, 
           OperandType, 
           RetireBusC, 
           RetireType, 
           hold);

    input [4:0] DecodeBusA;
    input [6:0] DecodeType;
    input [5:0] ExecuteBusC;
    input [6:0] ExecuteType;
    input [5:0] OperandBusC;
    input [6:0] OperandType;
    input [5:0] RetireBusC;
    input [6:0] RetireType;
   output hold;
   
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   
   OR2  XLXI_2 (.I0(ExecuteType[5]), 
               .I1(OperandType[5]), 
               .O(XLXN_19));
   AND2  XLXI_3 (.I0(DecodeType[4]), 
                .I1(XLXN_19), 
                .O(XLXN_28));
   AND2  XLXI_4 (.I0(DecodeType[0]), 
                .I1(XLXN_20), 
                .O(XLXN_29));
   AND3  XLXI_5 (.I0(DecodeType[2]), 
                .I1(OperandType[3]), 
                .I2(XLXN_41), 
                .O(XLXN_30));
   AND3  XLXI_6 (.I0(DecodeType[2]), 
                .I1(ExecuteType[3]), 
                .I2(XLXN_42), 
                .O(XLXN_31));
   AND3  XLXI_7 (.I0(DecodeType[2]), 
                .I1(RetireType[3]), 
                .I2(XLXN_43), 
                .O(XLXN_32));
   OR5  XLXI_8 (.I0(XLXN_32), 
               .I1(XLXN_31), 
               .I2(XLXN_30), 
               .I3(XLXN_29), 
               .I4(XLXN_28), 
               .O(hold));
   OR3  XLXI_9 (.I0(RetireType[1]), 
               .I1(ExecuteType[1]), 
               .I2(OperandType[1]), 
               .O(XLXN_20));
   COMP5_MUSER_UC2  XLXI_23 (.A(DecodeBusA[4:0]), 
                            .B(OperandBusC[4:0]), 
                            .equal(XLXN_41));
   COMP5_MUSER_UC2  XLXI_24 (.A(DecodeBusA[4:0]), 
                            .B(ExecuteBusC[4:0]), 
                            .equal(XLXN_42));
   COMP5_MUSER_UC2  XLXI_25 (.A(DecodeBusA[4:0]), 
                            .B(RetireBusC[4:0]), 
                            .equal(XLXN_43));
endmodule
