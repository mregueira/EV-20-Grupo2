////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : UC2.vf
// /___/   /\     Timestamp : 06/09/2020 00:32:04
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath C:/Users/Marcelo/Documents/GitHub/EV-20-Grupo2/MicroinstructionROM/ipcore_dir -intstyle ise -family artix7 -verilog C:/Users/Marcelo/Documents/GitHub/EV-20-Grupo2/MicroinstructionROM/UC2.vf -w C:/Users/Marcelo/Documents/GitHub/EV-20-Grupo2/MicroinstructionROM/UC2.sch
//Design Name: UC2
//Device: artix7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module OR6_HXILINX_UC2 (O, I0, I1, I2, I3, I4, I5);
    

   output O;

   input I0;
   input I1;
   input I2;
   input I3;
   input I4;
   input I5;

assign O = (I0 || I1 || I2 || I3 || I4 || I5);

endmodule
`timescale 1ns / 1ps

module COMPARADOR5_MUSER_UC2(a, 
                             b, 
                             iguales);

    input [4:0] a;
    input [4:0] b;
   output iguales;
   
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_20;
   wire XLXN_23;
   wire XLXN_24;
   
   XOR2  XLXI_1 (.I0(b[0]), 
                .I1(a[0]), 
                .O(XLXN_3));
   XOR2  XLXI_2 (.I0(b[1]), 
                .I1(a[1]), 
                .O(XLXN_4));
   XOR2  XLXI_3 (.I0(b[2]), 
                .I1(a[2]), 
                .O(XLXN_5));
   XOR2  XLXI_4 (.I0(b[3]), 
                .I1(a[3]), 
                .O(XLXN_6));
   INV  XLXI_5 (.I(XLXN_3), 
               .O(XLXN_10));
   INV  XLXI_6 (.I(XLXN_4), 
               .O(XLXN_7));
   INV  XLXI_7 (.I(XLXN_5), 
               .O(XLXN_8));
   INV  XLXI_8 (.I(XLXN_6), 
               .O(XLXN_9));
   AND4  XLXI_9 (.I0(XLXN_9), 
                .I1(XLXN_8), 
                .I2(XLXN_7), 
                .I3(XLXN_10), 
                .O(XLXN_24));
   XOR2  XLXI_10 (.I0(b[4]), 
                 .I1(a[4]), 
                 .O(XLXN_20));
   INV  XLXI_11 (.I(XLXN_20), 
                .O(XLXN_23));
   AND2  XLXI_12 (.I0(XLXN_23), 
                 .I1(XLXN_24), 
                 .O(iguales));
endmodule
`timescale 1ns / 1ps

module UC2(DecodeBusA, 
           DecodeMem, 
           DecodeType, 
           ExecuteBusC, 
           ExecuteType, 
           OperandBusC, 
           OperandType, 
           RetireBusC, 
           RetireType, 
           hold);

    input [4:0] DecodeBusA;
    input [1:0] DecodeMem;
    input [6:0] DecodeType;
    input [5:0] ExecuteBusC;
    input [6:0] ExecuteType;
    input [5:0] OperandBusC;
    input [6:0] OperandType;
    input [5:0] RetireBusC;
    input [6:0] RetireType;
   output hold;
   
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_60;
   wire XLXN_76;
   wire XLXN_77;
   wire XLXN_78;
   
   OR2  XLXI_2 (.I0(ExecuteType[5]), 
               .I1(OperandType[5]), 
               .O(XLXN_19));
   AND2  XLXI_3 (.I0(DecodeType[4]), 
                .I1(XLXN_19), 
                .O(XLXN_60));
   AND2  XLXI_4 (.I0(DecodeType[0]), 
                .I1(XLXN_20), 
                .O(XLXN_46));
   AND3  XLXI_5 (.I0(DecodeType[2]), 
                .I1(OperandType[3]), 
                .I2(XLXN_41), 
                .O(XLXN_47));
   AND3  XLXI_6 (.I0(DecodeType[2]), 
                .I1(ExecuteType[3]), 
                .I2(XLXN_42), 
                .O(XLXN_48));
   AND3  XLXI_7 (.I0(DecodeType[2]), 
                .I1(RetireType[3]), 
                .I2(XLXN_43), 
                .O(XLXN_49));
   OR3  XLXI_9 (.I0(RetireType[1]), 
               .I1(ExecuteType[1]), 
               .I2(OperandType[1]), 
               .O(XLXN_20));
   COMPARADOR5_MUSER_UC2  XLXI_26 (.a(DecodeBusA[4:0]), 
                                  .b(OperandBusC[4:0]), 
                                  .iguales(XLXN_41));
   COMPARADOR5_MUSER_UC2  XLXI_28 (.a(DecodeBusA[4:0]), 
                                  .b(ExecuteBusC[4:0]), 
                                  .iguales(XLXN_42));
   COMPARADOR5_MUSER_UC2  XLXI_29 (.a(DecodeBusA[4:0]), 
                                  .b(RetireBusC[4:0]), 
                                  .iguales(XLXN_43));
   (* HU_SET = "XLXI_30_48" *) 
   OR6_HXILINX_UC2  XLXI_30 (.I0(XLXN_78), 
                            .I1(XLXN_49), 
                            .I2(XLXN_48), 
                            .I3(XLXN_47), 
                            .I4(XLXN_46), 
                            .I5(XLXN_60), 
                            .O(hold));
   OR2  XLXI_42 (.I0(DecodeMem[1]), 
                .I1(DecodeMem[0]), 
                .O(XLXN_77));
   AND2  XLXI_43 (.I0(XLXN_77), 
                 .I1(XLXN_76), 
                 .O(XLXN_78));
   OR3  XLXI_44 (.I0(RetireType[1]), 
                .I1(ExecuteType[1]), 
                .I2(OperandType[1]), 
                .O(XLXN_76));
endmodule
